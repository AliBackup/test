

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 20:19:49 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 09/04/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	strings
   172  0003                     __pstrings:
   173  0003                     stringtab:
   174  0003                     __stringtab:
   175  0003                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178  0003                     stringdir:
   179  0003  3000               	movlw	high stringdir
   180  0004  008A               	movwf	10
   181  0005  0804               	movf	4,w
   182  0006  0A84               	incf	4,f
   183  0007  0782               	addwf	2,f
   184  0008                     __stringbase:
   185  0008  3400               	retlw	0
   186  0009                     __end_of__stringtab:
   187  0009                     main@a:
   188  0009  3441               	retlw	65
   189  000A  3442               	retlw	66
   190  000B  3449               	retlw	73
   191  000C  3444               	retlw	68
   192  000D  3420               	retlw	32
   193  000E  3441               	retlw	65
   194  000F  344C               	retlw	76
   195  0010  3449               	retlw	73
   196  0011  3400               	retlw	0
   197  0012                     __end_ofmain@a:
   198  0006                     _PORTB	set	6
   199  0008                     _PORTD	set	8
   200  0040                     _RD0	set	64
   201  0041                     _RD1	set	65
   202  0086                     _TRISB	set	134
   203  0088                     _TRISD	set	136
   204                           
   205                           	psect	cinit
   206  07FC                     start_initialization:	
   207                           ; #config settings
   208                           
   209  07FC                     __initialization:
   210  07FC                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213  07FC                     __end_of__initialization:
   214  07FC  0183               	clrf	3
   215  07FD  120A  118A  2F62   	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	cstackCOMMON
   218  0070                     __pcstackCOMMON:
   219  0070                     ?_init:
   220  0070                     ??_init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_cmd:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ??_cmd:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_singlestring:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_display:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_main:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_data:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ??_data:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246  0070                     	ds	3
   247  0073                     cmd@a:
   248  0073                     data@a:	
   249                           ; 1 bytes @ 0x3
   250                           
   251                           
   252                           ; 1 bytes @ 0x3
   253  0073                     	ds	1
   254  0074                     ??_singlestring:
   255  0074                     ??_display:	
   256                           ; 1 bytes @ 0x4
   257                           
   258  0074                     display@p:	
   259                           ; 1 bytes @ 0x4
   260                           
   261                           
   262                           ; 1 bytes @ 0x4
   263  0074                     	ds	1
   264  0075                     ??_main:
   265                           
   266                           ; 1 bytes @ 0x5
   267  0075                     	ds	3
   268                           
   269                           	psect	maintext
   270  0762                     __pmaintext:	
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 20 in file "LCD.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : B00/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0
   292 ;;      Temps:          3       0       0       0       0
   293 ;;      Totals:         3       0       0       0       0
   294 ;;Total ram usage:        3 bytes
   295 ;; Hardware stack levels required when called:    2
   296 ;; This function calls:
   297 ;;		_cmd
   298 ;;		_display
   299 ;;		_init
   300 ;;		_singlestring
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  0762                     _main:
   309  0762                     l696:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   312                           
   313                           
   314                           ;LCD.c: 23: const char a[]="ABID ALI";;LCD.c: 24: init();
   315  0762  120A  118A  270A  120A  118A  	fcall	_init
   316  0767                     l698:
   317                           
   318                           ;LCD.c: 25: cmd(0x01);
   319  0767  3001               	movlw	1
   320  0768  120A  118A  272B  120A  118A  	fcall	_cmd
   321  076D                     l700:
   322                           
   323                           ;LCD.c: 26: cmd(0x02);
   324  076D  3002               	movlw	2
   325  076E  120A  118A  272B  120A  118A  	fcall	_cmd
   326  0773                     l702:
   327                           
   328                           ;LCD.c: 27: cmd(0x0f);
   329  0773  300F               	movlw	15
   330  0774  120A  118A  272B  120A  118A  	fcall	_cmd
   331  0779                     l704:
   332                           
   333                           ;LCD.c: 28: cmd(0x80);
   334  0779  3080               	movlw	128
   335  077A  120A  118A  272B  120A  118A  	fcall	_cmd
   336  077F                     l706:
   337                           
   338                           ;LCD.c: 29: cmd(0x06);
   339  077F  3006               	movlw	6
   340  0780  120A  118A  272B  120A  118A  	fcall	_cmd
   341  0785                     l708:
   342                           
   343                           ;LCD.c: 30: cmd(0x38);
   344  0785  3038               	movlw	56
   345  0786  120A  118A  272B  120A  118A  	fcall	_cmd
   346  078B                     l710:
   347                           
   348                           ;LCD.c: 31:  singlestring();
   349  078B  120A  118A  27A7  120A  118A  	fcall	_singlestring
   350                           
   351                           ;LCD.c: 32: _delay((unsigned long)((2000)*(4000000/4000.0)));
   352  0790  300B               	movlw	11
   353  0791  00F7               	movwf	??_main+2
   354  0792  3026               	movlw	38
   355  0793  00F6               	movwf	??_main+1
   356  0794  305D               	movlw	93
   357  0795  00F5               	movwf	??_main
   358  0796                     u37:
   359  0796  0BF5               	decfsz	??_main,f
   360  0797  2F96               	goto	u37
   361  0798  0BF6               	decfsz	??_main+1,f
   362  0799  2F96               	goto	u37
   363  079A  0BF7               	decfsz	??_main+2,f
   364  079B  2F96               	goto	u37
   365  079C  2F9D               	nop2
   366  079D                     l712:
   367                           
   368                           ;LCD.c: 33: display(a);
   369  079D  3001               	movlw	(low ((main@a-__stringbase)| (0+32768)))& (0+255)
   370  079E  120A  118A  2743  120A  118A  	fcall	_display
   371  07A3                     l29:	
   372                           ;LCD.c: 35: while(1)
   373                           
   374  07A3                     l30:	
   375                           ;LCD.c: 36: {;LCD.c: 43: }
   376                           
   377  07A3  2FA3               	goto	l29
   378  07A4  120A  118A  2800   	ljmp	start
   379  07A7                     __end_of_main:
   380                           
   381                           	psect	text1
   382  07A7                     __ptext1:	
   383 ;; *************** function _singlestring *****************
   384 ;; Defined at:
   385 ;;		line 77 in file "LCD.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used:    1
   405 ;; Hardware stack levels required when called:    1
   406 ;; This function calls:
   407 ;;		_cmd
   408 ;;		_data
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _singlestring
   416  07A7                     _singlestring:
   417  07A7                     l660:	
   418                           ;incstack = 0
   419                           ; Regs used in _singlestring: [wreg+status,2+status,0+pclath+cstack]
   420                           
   421                           
   422                           ;LCD.c: 79: cmd(0x18);
   423  07A7  3018               	movlw	24
   424  07A8  120A  118A  272B  120A  118A  	fcall	_cmd
   425                           
   426                           ;LCD.c: 80: cmd(0x18);
   427  07AD  3018               	movlw	24
   428  07AE  120A  118A  272B  120A  118A  	fcall	_cmd
   429                           
   430                           ;LCD.c: 81: cmd(0x18);
   431  07B3  3018               	movlw	24
   432  07B4  120A  118A  272B  120A  118A  	fcall	_cmd
   433                           
   434                           ;LCD.c: 82: data('W');
   435  07B9  3057               	movlw	87
   436  07BA  120A  118A  2713  120A  118A  	fcall	_data
   437                           
   438                           ;LCD.c: 83: data('e');
   439  07BF  3065               	movlw	101
   440  07C0  120A  118A  2713  120A  118A  	fcall	_data
   441                           
   442                           ;LCD.c: 84: data('l');
   443  07C5  306C               	movlw	108
   444  07C6  120A  118A  2713  120A  118A  	fcall	_data
   445                           
   446                           ;LCD.c: 85: data('c');
   447  07CB  3063               	movlw	99
   448  07CC  120A  118A  2713  120A  118A  	fcall	_data
   449                           
   450                           ;LCD.c: 86: data('o');
   451  07D1  306F               	movlw	111
   452  07D2  120A  118A  2713  120A  118A  	fcall	_data
   453                           
   454                           ;LCD.c: 87: data('m');
   455  07D7  306D               	movlw	109
   456  07D8  120A  118A  2713  120A  118A  	fcall	_data
   457                           
   458                           ;LCD.c: 88: data('e');
   459  07DD  3065               	movlw	101
   460  07DE  120A  118A  2713  120A  118A  	fcall	_data
   461                           
   462                           ;LCD.c: 89: data(' ');
   463  07E3  3020               	movlw	32
   464  07E4  120A  118A  2713  120A  118A  	fcall	_data
   465                           
   466                           ;LCD.c: 91: cmd(0x1c);
   467  07E9  301C               	movlw	28
   468  07EA  120A  118A  272B  120A  118A  	fcall	_cmd
   469                           
   470                           ;LCD.c: 92: cmd(0x1c);
   471  07EF  301C               	movlw	28
   472  07F0  120A  118A  272B  120A  118A  	fcall	_cmd
   473                           
   474                           ;LCD.c: 93: cmd(0x1c);
   475  07F5  301C               	movlw	28
   476  07F6  120A  118A  272B  120A  118A  	fcall	_cmd
   477  07FB                     l44:
   478  07FB  0008               	return
   479  07FC                     __end_of_singlestring:
   480                           
   481                           	psect	text2
   482  072B                     __ptext2:	
   483 ;; *************** function _cmd *****************
   484 ;; Defined at:
   485 ;;		line 57 in file "LCD.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  a               1    wreg     unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  a               1    3[COMMON] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         1       0       0       0       0
   501 ;;      Temps:          3       0       0       0       0
   502 ;;      Totals:         4       0       0       0       0
   503 ;;Total ram usage:        4 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;;		_singlestring
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _cmd
   515  072B                     _cmd:
   516                           
   517                           ;incstack = 0
   518                           ; Regs used in _cmd: [wreg]
   519                           ;cmd@a stored from wreg
   520  072B  00F3               	movwf	cmd@a
   521  072C                     l642:
   522                           
   523                           ;LCD.c: 57: void cmd(unsigned char a);LCD.c: 58: {;LCD.c: 59:     RD1=0;
   524  072C  1283               	bcf	3,5	;RP0=0, select bank0
   525  072D  1303               	bcf	3,6	;RP1=0, select bank0
   526  072E  1088               	bcf	8,1	;volatile
   527  072F                     l644:
   528                           
   529                           ;LCD.c: 60:     PORTB=a;
   530  072F  0873               	movf	cmd@a,w
   531  0730  0086               	movwf	6	;volatile
   532  0731                     l646:
   533                           
   534                           ;LCD.c: 61:     RD0=1;
   535  0731  1408               	bsf	8,0	;volatile
   536                           
   537                           ;LCD.c: 62:     _delay((unsigned long)((500)*(4000000/4000.0)));
   538  0732  3003               	movlw	3
   539  0733  00F2               	movwf	??_cmd+2
   540  0734  308A               	movlw	138
   541  0735  00F1               	movwf	??_cmd+1
   542  0736  3055               	movlw	85
   543  0737  00F0               	movwf	??_cmd
   544  0738                     u47:
   545  0738  0BF0               	decfsz	??_cmd,f
   546  0739  2F38               	goto	u47
   547  073A  0BF1               	decfsz	??_cmd+1,f
   548  073B  2F38               	goto	u47
   549  073C  0BF2               	decfsz	??_cmd+2,f
   550  073D  2F38               	goto	u47
   551  073E  2F3F               	nop2
   552  073F                     l648:
   553                           
   554                           ;LCD.c: 63:     RD0=0;
   555  073F  1283               	bcf	3,5	;RP0=0, select bank0
   556  0740  1303               	bcf	3,6	;RP1=0, select bank0
   557  0741  1008               	bcf	8,0	;volatile
   558  0742                     l38:
   559  0742  0008               	return
   560  0743                     __end_of_cmd:
   561                           
   562                           	psect	text3
   563  070A                     __ptext3:	
   564 ;; *************** function _init *****************
   565 ;; Defined at:
   566 ;;		line 47 in file "LCD.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		status,2
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _init
   595  070A                     _init:
   596  070A                     l658:	
   597                           ;incstack = 0
   598                           ; Regs used in _init: [status,2]
   599                           
   600                           
   601                           ;LCD.c: 48:     TRISD=0x00;
   602  070A  1683               	bsf	3,5	;RP0=1, select bank1
   603  070B  1303               	bcf	3,6	;RP1=0, select bank1
   604  070C  0188               	clrf	8	;volatile
   605                           
   606                           ;LCD.c: 49:     TRISB=0x00;
   607  070D  0186               	clrf	6	;volatile
   608                           
   609                           ;LCD.c: 50:     PORTD=0x00;
   610  070E  1283               	bcf	3,5	;RP0=0, select bank0
   611  070F  1303               	bcf	3,6	;RP1=0, select bank0
   612  0710  0188               	clrf	8	;volatile
   613                           
   614                           ;LCD.c: 51:     PORTB= 0x00;
   615  0711  0186               	clrf	6	;volatile
   616  0712                     l35:
   617  0712  0008               	return
   618  0713                     __end_of_init:
   619                           
   620                           	psect	text4
   621  0743                     __ptext4:	
   622 ;; *************** function _display *****************
   623 ;; Defined at:
   624 ;;		line 99 in file "LCD.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  p               1    wreg     PTR const unsigned char 
   627 ;;		 -> main@a(9), 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  p               1    4[COMMON] PTR const unsigned char 
   630 ;;		 -> main@a(9), 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         1       0       0       0       0
   644 ;;Total ram usage:        1 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    1
   647 ;; This function calls:
   648 ;;		_data
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _display
   656  0743                     _display:
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   660                           ;display@p stored from wreg
   661  0743  00F4               	movwf	display@p
   662  0744                     l688:
   663                           
   664                           ;LCD.c: 99: void display(const char *p);LCD.c: 100: {;LCD.c: 101:     while(*p){
   665  0744  2F55               	goto	l694
   666  0745                     l690:
   667                           
   668                           ;LCD.c: 102:         data(*p);
   669  0745  0874               	movf	display@p,w
   670  0746  0084               	movwf	4
   671  0747  120A  118A  2003  120A  118A  	fcall	stringdir
   672  074C  120A  118A  2713  120A  118A  	fcall	_data
   673  0751                     l692:
   674                           
   675                           ;LCD.c: 103:         p++;
   676  0751  3001               	movlw	1
   677  0752  00FF               	movwf	btemp+1
   678  0753  087F               	movf	btemp+1,w
   679  0754  07F4               	addwf	display@p,f
   680  0755                     l694:
   681                           
   682                           ;LCD.c: 101:     while(*p){
   683  0755  0874               	movf	display@p,w
   684  0756  0084               	movwf	4
   685  0757  120A  118A  2003  120A  118A  	fcall	stringdir
   686  075C  3A00               	xorlw	0
   687  075D  1D03               	skipz
   688  075E  2F60               	goto	u21
   689  075F  2F61               	goto	u20
   690  0760                     u21:
   691  0760  2F45               	goto	l690
   692  0761                     u20:
   693  0761                     l50:
   694  0761  0008               	return
   695  0762                     __end_of_display:
   696                           
   697                           	psect	text5
   698  0713                     __ptext5:	
   699 ;; *************** function _data *****************
   700 ;; Defined at:
   701 ;;		line 67 in file "LCD.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  a               1    wreg     unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  a               1    3[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0
   717 ;;      Temps:          3       0       0       0       0
   718 ;;      Totals:         4       0       0       0       0
   719 ;;Total ram usage:        4 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_singlestring
   725 ;;		_display
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _data
   731  0713                     _data:
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _data: [wreg]
   735                           ;data@a stored from wreg
   736  0713  00F3               	movwf	data@a
   737  0714                     l650:
   738                           
   739                           ;LCD.c: 67: void data(char a);LCD.c: 68: {;LCD.c: 69:     RD1=1;
   740  0714  1283               	bcf	3,5	;RP0=0, select bank0
   741  0715  1303               	bcf	3,6	;RP1=0, select bank0
   742  0716  1488               	bsf	8,1	;volatile
   743  0717                     l652:
   744                           
   745                           ;LCD.c: 70:     PORTB=a;
   746  0717  0873               	movf	data@a,w
   747  0718  0086               	movwf	6	;volatile
   748  0719                     l654:
   749                           
   750                           ;LCD.c: 71:     RD0=1;
   751  0719  1408               	bsf	8,0	;volatile
   752                           
   753                           ;LCD.c: 72:     _delay((unsigned long)((500)*(4000000/4000.0)));
   754  071A  3003               	movlw	3
   755  071B  00F2               	movwf	??_data+2
   756  071C  308A               	movlw	138
   757  071D  00F1               	movwf	??_data+1
   758  071E  3055               	movlw	85
   759  071F  00F0               	movwf	??_data
   760  0720                     u57:
   761  0720  0BF0               	decfsz	??_data,f
   762  0721  2F20               	goto	u57
   763  0722  0BF1               	decfsz	??_data+1,f
   764  0723  2F20               	goto	u57
   765  0724  0BF2               	decfsz	??_data+2,f
   766  0725  2F20               	goto	u57
   767  0726  2F27               	nop2
   768  0727                     l656:
   769                           
   770                           ;LCD.c: 73:     RD0=0;
   771  0727  1283               	bcf	3,5	;RP0=0, select bank0
   772  0728  1303               	bcf	3,6	;RP1=0, select bank0
   773  0729  1008               	bcf	8,0	;volatile
   774  072A                     l41:
   775  072A  0008               	return
   776  072B                     __end_of_data:
   777  007E                     btemp	set	126	;btemp
   778  007E                     wtemp0	set	126
   779                           
   780                           	psect	config
   781                           
   782                           ;Config register CONFIG @ 0x2007
   783                           ;	Oscillator Selection bits
   784                           ;	FOSC = XT, XT oscillator
   785                           ;	Watchdog Timer Enable bit
   786                           ;	WDTE = OFF, WDT disabled
   787                           ;	Power-up Timer Enable bit
   788                           ;	PWRTE = ON, PWRT enabled
   789                           ;	Brown-out Reset Enable bit
   790                           ;	BOREN = ON, BOR enabled
   791                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   792                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   793                           ;	Data EEPROM Memory Code Protection bit
   794                           ;	CPD = OFF, Data EEPROM code protection off
   795                           ;	Flash Program Memory Write Enable bits
   796                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   797                           ;	In-Circuit Debugger Mode bit
   798                           ;	DEBUG = 0x1, unprogrammed default
   799                           ;	Flash Program Memory Code Protection bit
   800                           ;	CP = OFF, Code protection off
   801  2007                     	org	8199
   802  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    9
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 9
		 -> main@a(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_display
    _singlestring->_cmd
    _singlestring->_data
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     138
                                              5 COMMON     3     3      0
                                _cmd
                            _display
                               _init
                       _singlestring
 ---------------------------------------------------------------------------------
 (1) _singlestring                                         0     0      0      30
                                _cmd
                               _data
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0      93
                                              4 COMMON     1     1      0
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _display
     _data
   _init
   _singlestring
     _cmd
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 20:19:49 2020

                      pc 0002                       l30 07A3                       l41 072A  
                     l50 0761                       l35 0712                       l44 07FB  
                     l29 07A3                       l38 0742                       u20 0761  
                     u21 0760                       u37 0796                       u47 0738  
                     u57 0720                       fsr 0004                      l700 076D  
                    l710 078B                      l702 0773                      l712 079D  
                    l704 0779                      l650 0714                      l642 072C  
                    l706 077F                      l652 0717                      l644 072F  
                    l660 07A7                      l708 0785                      l654 0719  
                    l646 0731                      l656 0727                      l648 073F  
                    l690 0745                      l658 070A                      l692 0751  
                    l694 0755                      l688 0744                      l696 0762  
                    l698 0767                      _RD0 0040                      _RD1 0041  
                    _cmd 072B                      fsr0 0004                     ?_cmd 0070  
                   _data 0713                     cmd@a 0073                     _main 0762  
                   _init 070A                     btemp 007E                     start 0000  
                  ??_cmd 0070                    ?_data 0070                    ?_main 0070  
                  ?_init 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088          __end_of_display 0762  
                  data@a 0073                    main@a 0009                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_data 072B             __end_of_main 07A7             __end_of_init 0713  
                 ??_data 0070                   ??_main 0075                   ??_init 0070  
              ??_display 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_ofmain@a 0012               __pmaintext 0762               __stringtab 0003  
                __ptext1 07A7                  __ptext2 072B                  __ptext3 070A  
                __ptext4 0743                  __ptext5 0713                  _display 0743  
           __size_of_cmd 0018     end_of_initialization 07FC            ?_singlestring 0070  
         ??_singlestring 0074      start_initialization 07FC              __end_of_cmd 0743  
              ___latbits 0002                __pstrings 0003                 ?_display 0070  
   __end_of_singlestring 07FC              __stringbase 0008       __end_of__stringtab 0009  
       __size_of_display 001F            __size_of_data 0018            __size_of_main 0045  
          __size_of_init 0009    __size_of_singlestring 0055                 display@p 0074  
           _singlestring 07A7                stringcode 0003                 stringdir 0003  
               stringtab 0003  

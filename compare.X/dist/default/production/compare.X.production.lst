

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 14 22:15:59 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 09/04/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0015                     _CCPR1	set	21
   168  000E                     _TMR1	set	14
   169  0062                     _CCP1IF	set	98
   170  005F                     _GIE	set	95
   171  005E                     _PEIE	set	94
   172  00BB                     _CCP1M3	set	187
   173  00BA                     _CCP1M2	set	186
   174  00B9                     _CCP1M1	set	185
   175  00B8                     _CCP1M0	set	184
   176  0080                     _TMR1ON	set	128
   177  0081                     _TMR1CS	set	129
   178  0085                     _T1CKPS1	set	133
   179  0084                     _T1CKPS0	set	132
   180  003C                     _RC4	set	60
   181  0462                     _CCP1IE	set	1122
   182  043C                     _TRISC4	set	1084
   183                           
   184                           	psect	cinit
   185  0013                     start_initialization:	
   186                           ; #config settings
   187                           
   188  0013                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191  0013  01F3               	clrf	__pbssCOMMON& (0+127)
   192  0014                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  0014                     __end_of__initialization:
   196  0014  0183               	clrf	3
   197  0015  120A  118A  2818   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMMON
   200  0073                     __pbssCOMMON:
   201  0073                     _X:
   202  0073                     	ds	1
   203                           
   204                           	psect	cstackCOMMON
   205  0070                     __pcstackCOMMON:
   206  0070                     ?_main:
   207  0070                     ?_ISR:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ??_ISR:	
   211                           ; 1 bytes @ 0x0
   212                           
   213                           
   214                           ; 1 bytes @ 0x0
   215  0070                     	ds	3
   216  0073                     ??_main:
   217                           
   218                           	psect	maintext
   219  0018                     __pmaintext:	
   220                           ; 1 bytes @ 0x3
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 13 in file "compare.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		status,2
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   240 ;;      Params:         0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0
   242 ;;      Temps:          0       0       0       0       0
   243 ;;      Totals:         0       0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels required when called:    1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0018                     _main:
   256  0018                     l641:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [status,2]
   259                           
   260                           
   261                           ;compare.c: 17:   TRISC4=0;
   262  0018  1683               	bsf	3,5	;RP0=1, select bank1
   263  0019  1303               	bcf	3,6	;RP1=0, select bank1
   264  001A  1207               	bcf	7,4	;volatile
   265                           
   266                           ;compare.c: 18:   RC4=0;
   267  001B  1283               	bcf	3,5	;RP0=0, select bank0
   268  001C  1303               	bcf	3,6	;RP1=0, select bank0
   269  001D  1207               	bcf	7,4	;volatile
   270  001E                     l643:
   271                           
   272                           ;compare.c: 20:   TMR1 = 0;
   273  001E  018E               	clrf	14	;volatile
   274  001F  018F               	clrf	15	;volatile
   275  0020                     l645:
   276                           
   277                           ;compare.c: 21:   T1CKPS0 = 0;
   278  0020  1210               	bcf	16,4	;volatile
   279  0021                     l647:
   280                           
   281                           ;compare.c: 22:   T1CKPS1 = 0;
   282  0021  1290               	bcf	16,5	;volatile
   283  0022                     l649:
   284                           
   285                           ;compare.c: 23:   TMR1CS = 0;
   286  0022  1090               	bcf	16,1	;volatile
   287  0023                     l651:
   288                           
   289                           ;compare.c: 24:   TMR1ON = 1;
   290  0023  1410               	bsf	16,0	;volatile
   291  0024                     l653:
   292                           
   293                           ;compare.c: 27:   CCPR1 = 50000;
   294  0024  30C3               	movlw	195
   295  0025  0096               	movwf	22	;volatile
   296  0026  3050               	movlw	80
   297  0027  0095               	movwf	21	;volatile
   298  0028                     l655:
   299                           
   300                           ;compare.c: 29:   CCP1M0 = 1;
   301  0028  1417               	bsf	23,0	;volatile
   302  0029                     l657:
   303                           
   304                           ;compare.c: 30:   CCP1M1 = 1;
   305  0029  1497               	bsf	23,1	;volatile
   306  002A                     l659:
   307                           
   308                           ;compare.c: 31:   CCP1M2 = 0;
   309  002A  1117               	bcf	23,2	;volatile
   310  002B                     l661:
   311                           
   312                           ;compare.c: 32:   CCP1M3 = 1;
   313  002B  1597               	bsf	23,3	;volatile
   314  002C                     l663:
   315                           
   316                           ;compare.c: 34:   CCP1IE = 1;
   317  002C  1683               	bsf	3,5	;RP0=1, select bank1
   318  002D  1303               	bcf	3,6	;RP1=0, select bank1
   319  002E  150C               	bsf	12,2	;volatile
   320  002F                     l665:
   321                           
   322                           ;compare.c: 35:   PEIE = 1;
   323  002F  170B               	bsf	11,6	;volatile
   324  0030                     l667:
   325                           
   326                           ;compare.c: 36:   GIE = 1;
   327  0030  178B               	bsf	11,7	;volatile
   328  0031                     l39:	
   329                           ;compare.c: 38:   while (1)
   330                           
   331  0031                     l40:	
   332                           ;compare.c: 39:   {;compare.c: 41:   }
   333                           
   334  0031  2831               	goto	l39
   335  0032  120A  118A  2810   	ljmp	start
   336  0035                     __end_of_main:
   337                           
   338                           	psect	text1
   339  0035                     __ptext1:	
   340 ;; *************** function _ISR *****************
   341 ;; Defined at:
   342 ;;		line 45 in file "compare.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, btemp+1
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0       0       0       0       0
   358 ;;      Temps:          3       0       0       0       0
   359 ;;      Totals:         3       0       0       0       0
   360 ;;Total ram usage:        3 bytes
   361 ;; Hardware stack levels used:    1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		Interrupt level 1
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _ISR
   371  0035                     _ISR:
   372  0035                     i1l669:
   373                           
   374                           ;compare.c: 47:   if ( CCP1IF )
   375  0035  1D0C               	btfss	12,2	;volatile
   376  0036  2838               	goto	u1_21
   377  0037  2839               	goto	u1_20
   378  0038                     u1_21:
   379  0038  2847               	goto	i1l49
   380  0039                     u1_20:
   381  0039                     i1l671:
   382                           
   383                           ;compare.c: 48:   {;compare.c: 49:     X++;
   384  0039  3001               	movlw	1
   385  003A  00FF               	movwf	btemp+1
   386  003B  087F               	movf	btemp+1,w
   387  003C  07F3               	addwf	_X,f
   388  003D                     i1l673:
   389                           
   390                           ;compare.c: 50:     if (X==10)
   391  003D  300A               	movlw	10
   392  003E  0673               	xorwf	_X,w
   393  003F  1D03               	btfss	3,2
   394  0040  2842               	goto	u2_21
   395  0041  2843               	goto	u2_20
   396  0042                     u2_21:
   397  0042  2846               	goto	i1l679
   398  0043                     u2_20:
   399  0043                     i1l675:
   400                           
   401                           ;compare.c: 51:     {;compare.c: 53:       RC4 = ~RC4;
   402  0043  3010               	movlw	16
   403  0044  0687               	xorwf	7,f
   404  0045                     i1l677:
   405                           
   406                           ;compare.c: 54:       X = 0;
   407  0045  01F3               	clrf	_X
   408  0046                     i1l679:
   409                           
   410                           ;compare.c: 57:     CCP1IF = 0;
   411  0046  110C               	bcf	12,2	;volatile
   412  0047                     i1l49:
   413  0047  0872               	movf	??_ISR+2,w
   414  0048  00FF               	movwf	btemp+1
   415  0049  0871               	movf	??_ISR+1,w
   416  004A  008A               	movwf	10
   417  004B  0E70               	swapf	??_ISR^(0+4294967168),w
   418  004C  0083               	movwf	3
   419  004D  0EFE               	swapf	btemp,f
   420  004E  0E7E               	swapf	btemp,w
   421  004F  0009               	retfie
   422  0050                     __end_of_ISR:
   423  007E                     btemp	set	126	;btemp
   424  007E                     wtemp0	set	126
   425                           
   426                           	psect	intentry
   427  0004                     __pintentry:	
   428                           ;incstack = 0
   429                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   430                           
   431  0004                     interrupt_function:
   432  007E                     saved_w	set	btemp
   433  0004  00FE               	movwf	btemp
   434  0005  0E03               	swapf	3,w
   435  0006  00F0               	movwf	??_ISR
   436  0007  080A               	movf	10,w
   437  0008  00F1               	movwf	??_ISR+1
   438  0009  1283               	bcf	3,5	;RP0=0, select bank0
   439  000A  1303               	bcf	3,6	;RP1=0, select bank0
   440  000B  087F               	movf	btemp+1,w
   441  000C  00F2               	movwf	??_ISR+2
   442  000D  120A  118A  2835   	ljmp	_ISR
   443                           
   444                           	psect	config
   445                           
   446                           ;Config register CONFIG @ 0x2007
   447                           ;	Oscillator Selection bits
   448                           ;	FOSC = XT, XT oscillator
   449                           ;	Watchdog Timer Enable bit
   450                           ;	WDTE = OFF, WDT disabled
   451                           ;	Power-up Timer Enable bit
   452                           ;	PWRTE = ON, PWRT enabled
   453                           ;	Brown-out Reset Enable bit
   454                           ;	BOREN = ON, BOR enabled
   455                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   456                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   457                           ;	Data EEPROM Memory Code Protection bit
   458                           ;	CPD = OFF, Data EEPROM code protection off
   459                           ;	Flash Program Memory Write Enable bits
   460                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   461                           ;	In-Circuit Debugger Mode bit
   462                           ;	DEBUG = 0x1, unprogrammed default
   463                           ;	Flash Program Memory Code Protection bit
   464                           ;	CP = OFF, Code protection off
   465  2007                     	org	8199
   466  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 14 22:15:59 2020

                      _X 0073                       l40 0031                       l39 0031  
                    l641 0018                      l651 0023                      l643 001E  
                    l661 002B                      l653 0024                      l645 0020  
                    l663 002C                      l655 0028                      l647 0021  
                    l665 002F                      l657 0029                      l649 0022  
                    l667 0030                      l659 002A                      _GIE 005F  
                    _RC4 003C                      _ISR 0035                     ?_ISR 0070  
                   _PEIE 005E                     i1l49 0047                     _TMR1 000E  
                   u1_20 0039                     u1_21 0038                     u2_20 0043  
                   u2_21 0042                     _main 0018                     btemp 007E  
                   start 0010                    ??_ISR 0070                    ?_main 0070  
                  _CCPR1 0015                    i1l671 0039                    i1l673 003D  
                  i1l675 0043                    i1l677 0045                    i1l669 0035  
                  i1l679 0046                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 0035  
                 ??_main 0073                   _CCP1M0 00B8                   _CCP1M1 00B9  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP1IE 0462  
                 _CCP1IF 0062                   _TMR1CS 0081                   _TMR1ON 0080  
                 _TRISC4 043C                   saved_w 007E  __end_of__initialization 0014  
         __pcstackCOMMON 0070               __pmaintext 0018               __pintentry 0004  
                _T1CKPS0 0084                  _T1CKPS1 0085                  __ptext1 0035  
           __size_of_ISR 001B     end_of_initialization 0014      start_initialization 0013  
            __end_of_ISR 0050              __pbssCOMMON 0073                ___latbits 0002  
      interrupt_function 0004            __size_of_main 001D                 intlevel1 0000  



Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 14 19:58:55 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 09/04/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0059                     _INTF	set	89
   167  0031                     _RB1	set	49
   168  005F                     _GIE	set	95
   169  005C                     _INTE	set	92
   170  003A                     _RC2	set	58
   171  0039                     _RC1	set	57
   172  040E                     _INTEDG	set	1038
   173  0431                     _TRISB1	set	1073
   174  043A                     _TRISC2	set	1082
   175  0439                     _TRISC1	set	1081
   176                           
   177                           	psect	cinit
   178  000F                     start_initialization:	
   179                           ; #config settings
   180                           
   181  000F                     __initialization:
   182  000F                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185  000F                     __end_of__initialization:
   186  000F  0183               	clrf	3
   187  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	cstackCOMMON
   190  0070                     __pcstackCOMMON:
   191  0070                     ?_main:
   192  0070                     ?_ISR:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ??_ISR:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 1 bytes @ 0x0
   200  0070                     	ds	2
   201  0072                     ??_main:
   202                           
   203                           ; 1 bytes @ 0x2
   204  0072                     	ds	3
   205                           
   206                           	psect	maintext
   207  0013                     __pmaintext:	
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 13 in file "intr_req.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg
   222 ;; Tracked objects:
   223 ;;		On entry : B00/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   227 ;;      Params:         0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0
   229 ;;      Temps:          3       0       0       0       0
   230 ;;      Totals:         3       0       0       0       0
   231 ;;Total ram usage:        3 bytes
   232 ;; Hardware stack levels required when called:    1
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		Startup code after reset
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240                           
   241                           ;psect for function _main
   242  0013                     _main:
   243  0013                     l629:	
   244                           ;incstack = 0
   245                           ; Regs used in _main: [wreg]
   246                           
   247                           
   248                           ;intr_req.c: 16:   TRISC1 = 0;
   249  0013  1683               	bsf	3,5	;RP0=1, select bank1
   250  0014  1303               	bcf	3,6	;RP1=0, select bank1
   251  0015  1087               	bcf	7,1	;volatile
   252                           
   253                           ;intr_req.c: 17:   TRISC2 = 0;
   254  0016  1107               	bcf	7,2	;volatile
   255                           
   256                           ;intr_req.c: 19:   RC1 = 0;
   257  0017  1283               	bcf	3,5	;RP0=0, select bank0
   258  0018  1303               	bcf	3,6	;RP1=0, select bank0
   259  0019  1087               	bcf	7,1	;volatile
   260                           
   261                           ;intr_req.c: 20:   RC2 = 0;
   262  001A  1107               	bcf	7,2	;volatile
   263                           
   264                           ;intr_req.c: 22:   TRISB1 = 1;
   265  001B  1683               	bsf	3,5	;RP0=1, select bank1
   266  001C  1303               	bcf	3,6	;RP1=0, select bank1
   267  001D  1486               	bsf	6,1	;volatile
   268                           
   269                           ;intr_req.c: 24:   INTEDG = 0;
   270  001E  1301               	bcf	1,6	;volatile
   271                           
   272                           ;intr_req.c: 25:   INTE = 1;
   273  001F  160B               	bsf	11,4	;volatile
   274                           
   275                           ;intr_req.c: 26:   GIE = 1;
   276  0020  178B               	bsf	11,7	;volatile
   277  0021                     l27:	
   278                           ;intr_req.c: 28:   while(1)
   279                           
   280                           
   281                           ;intr_req.c: 29:   {;intr_req.c: 31:     RC2 = 1;
   282  0021  1283               	bcf	3,5	;RP0=0, select bank0
   283  0022  1507               	bsf	7,2	;volatile
   284  0023                     l631:
   285                           
   286                           ;intr_req.c: 32:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   287  0023  3006               	movlw	6
   288  0024  00F4               	movwf	??_main+2
   289  0025  3013               	movlw	19
   290  0026  00F3               	movwf	??_main+1
   291  0027  30AD               	movlw	173
   292  0028  00F2               	movwf	??_main
   293  0029                     u37:
   294  0029  0BF2               	decfsz	??_main,f
   295  002A  2829               	goto	u37
   296  002B  0BF3               	decfsz	??_main+1,f
   297  002C  2829               	goto	u37
   298  002D  0BF4               	decfsz	??_main+2,f
   299  002E  2829               	goto	u37
   300  002F  2830               	nop2
   301  0030                     l633:
   302                           
   303                           ;intr_req.c: 33:     RC2 = 0;
   304  0030  1283               	bcf	3,5	;RP0=0, select bank0
   305  0031  1303               	bcf	3,6	;RP1=0, select bank0
   306  0032  1107               	bcf	7,2	;volatile
   307                           
   308                           ;intr_req.c: 34:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   309  0033  3006               	movlw	6
   310  0034  00F4               	movwf	??_main+2
   311  0035  3013               	movlw	19
   312  0036  00F3               	movwf	??_main+1
   313  0037  30AD               	movlw	173
   314  0038  00F2               	movwf	??_main
   315  0039                     u47:
   316  0039  0BF2               	decfsz	??_main,f
   317  003A  2839               	goto	u47
   318  003B  0BF3               	decfsz	??_main+1,f
   319  003C  2839               	goto	u47
   320  003D  0BF4               	decfsz	??_main+2,f
   321  003E  2839               	goto	u47
   322  003F  2840               	nop2
   323  0040                     l635:
   324                           
   325                           ;intr_req.c: 36:     if (RB1)
   326  0040  1283               	bcf	3,5	;RP0=0, select bank0
   327  0041  1303               	bcf	3,6	;RP1=0, select bank0
   328  0042  1C86               	btfss	6,1	;volatile
   329  0043  2845               	goto	u11
   330  0044  2846               	goto	u10
   331  0045                     u11:
   332  0045  2821               	goto	l27
   333  0046                     u10:
   334  0046                     l637:
   335                           
   336                           ;intr_req.c: 37:     {;intr_req.c: 39:       RC1 = ~ RC1;
   337  0046  3002               	movlw	2
   338  0047  0687               	xorwf	7,f
   339  0048  2821               	goto	l27
   340  0049  120A  118A  280C   	ljmp	start
   341  004C                     __end_of_main:
   342                           
   343                           	psect	text1
   344  004C                     __ptext1:	
   345 ;; *************** function _ISR *****************
   346 ;; Defined at:
   347 ;;		line 45 in file "intr_req.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0
   363 ;;      Temps:          2       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		Interrupt level 1
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _ISR
   376  004C                     _ISR:
   377  004C                     i1l639:
   378                           
   379                           ;intr_req.c: 47:   if(INTF)
   380  004C  1C8B               	btfss	11,1	;volatile
   381  004D  284F               	goto	u2_21
   382  004E  2850               	goto	u2_20
   383  004F                     u2_21:
   384  004F  2855               	goto	i1l37
   385  0050                     u2_20:
   386  0050                     i1l641:
   387                           
   388                           ;intr_req.c: 48:   {;intr_req.c: 50:     RC1 = ~ RC1;
   389  0050  3002               	movlw	2
   390  0051  1283               	bcf	3,5	;RP0=0, select bank0
   391  0052  1303               	bcf	3,6	;RP1=0, select bank0
   392  0053  0687               	xorwf	7,f
   393  0054                     i1l643:
   394                           
   395                           ;intr_req.c: 51:     INTF = 0;
   396  0054  108B               	bcf	11,1	;volatile
   397  0055                     i1l37:
   398  0055  0871               	movf	??_ISR+1,w
   399  0056  008A               	movwf	10
   400  0057  0E70               	swapf	??_ISR^(0+4294967168),w
   401  0058  0083               	movwf	3
   402  0059  0EFE               	swapf	btemp,f
   403  005A  0E7E               	swapf	btemp,w
   404  005B  0009               	retfie
   405  005C                     __end_of_ISR:
   406  007E                     btemp	set	126	;btemp
   407  007E                     wtemp0	set	126
   408                           
   409                           	psect	intentry
   410  0004                     __pintentry:	
   411                           ;incstack = 0
   412                           ; Regs used in _ISR: [wreg]
   413                           
   414  0004                     interrupt_function:
   415  007E                     saved_w	set	btemp
   416  0004  00FE               	movwf	btemp
   417  0005  0E03               	swapf	3,w
   418  0006  00F0               	movwf	??_ISR
   419  0007  080A               	movf	10,w
   420  0008  00F1               	movwf	??_ISR+1
   421  0009  120A  118A  284C   	ljmp	_ISR
   422                           
   423                           	psect	config
   424                           
   425                           ;Config register CONFIG @ 0x2007
   426                           ;	Oscillator Selection bits
   427                           ;	FOSC = XT, XT oscillator
   428                           ;	Watchdog Timer Enable bit
   429                           ;	WDTE = OFF, WDT disabled
   430                           ;	Power-up Timer Enable bit
   431                           ;	PWRTE = ON, PWRT enabled
   432                           ;	Brown-out Reset Enable bit
   433                           ;	BOREN = ON, BOR enabled
   434                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   435                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   436                           ;	Data EEPROM Memory Code Protection bit
   437                           ;	CPD = OFF, Data EEPROM code protection off
   438                           ;	Flash Program Memory Write Enable bits
   439                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   440                           ;	In-Circuit Debugger Mode bit
   441                           ;	DEBUG = 0x1, unprogrammed default
   442                           ;	Flash Program Memory Code Protection bit
   443                           ;	CP = OFF, Code protection off
   444  2007                     	org	8199
   445  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 14 19:58:55 2020

                     l27 0021                       u10 0046                       u11 0045  
                     u37 0029                       u47 0039                      l631 0023  
                    l633 0030                      l635 0040                      l637 0046  
                    l629 0013                      _GIE 005F                      _RB1 0031  
                    _RC1 0039                      _RC2 003A                      _ISR 004C  
                   ?_ISR 0070                     _INTE 005C                     _INTF 0059  
                   i1l37 0055                     u2_20 0050                     u2_21 004F  
                   _main 0013                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l641 0050  
                  i1l643 0054                    i1l639 004C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 004C                   ??_main 0072                   _INTEDG 040E  
                 _TRISB1 0431                   _TRISC1 0439                   _TRISC2 043A  
                 saved_w 007E  __end_of__initialization 000F           __pcstackCOMMON 0070  
             __pmaintext 0013               __pintentry 0004                  __ptext1 004C  
           __size_of_ISR 0010     end_of_initialization 000F      start_initialization 000F  
            __end_of_ISR 005C                ___latbits 0002        interrupt_function 0004  
          __size_of_main 0039                 intlevel1 0000  

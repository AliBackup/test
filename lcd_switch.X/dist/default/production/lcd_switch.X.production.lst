

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 20:41:38 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 09/04/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	strings
   172  0003                     __pstrings:
   173  0003                     stringtab:
   174  0003                     __stringtab:
   175  0003                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178  0003                     stringdir:
   179  0003  3000               	movlw	high stringdir
   180  0004  008A               	movwf	10
   181  0005  0804               	movf	4,w
   182  0006  0A84               	incf	4,f
   183  0007  0782               	addwf	2,f
   184  0008                     __stringbase:
   185  0008  3400               	retlw	0
   186  0009                     __end_of__stringtab:
   187  0009                     main@a:
   188  0009  3441               	retlw	65
   189  000A  3442               	retlw	66
   190  000B  3449               	retlw	73
   191  000C  3444               	retlw	68
   192  000D  3400               	retlw	0
   193  000E                     __end_ofmain@a:
   194  0006                     _PORTB	set	6
   195  0008                     _PORTD	set	8
   196  0040                     _RD0	set	64
   197  0041                     _RD1	set	65
   198  003E                     _RC6	set	62
   199  003D                     _RC5	set	61
   200  0086                     _TRISB	set	134
   201  0088                     _TRISD	set	136
   202  043E                     _TRISC6	set	1086
   203  043D                     _TRISC5	set	1085
   204                           
   205                           	psect	cinit
   206  07FC                     start_initialization:	
   207                           ; #config settings
   208                           
   209  07FC                     __initialization:
   210  07FC                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213  07FC                     __end_of__initialization:
   214  07FC  0183               	clrf	3
   215  07FD  120A  118A  2F86   	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	cstackCOMMON
   218  0070                     __pcstackCOMMON:
   219  0070                     ?_init:
   220  0070                     ??_init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_cmd:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ??_cmd:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_singlestring:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_display:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_data:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ??_data:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246  0070                     	ds	3
   247  0073                     cmd@a:
   248  0073                     data@a:	
   249                           ; 1 bytes @ 0x3
   250                           
   251                           
   252                           ; 1 bytes @ 0x3
   253  0073                     	ds	1
   254  0074                     ??_singlestring:
   255  0074                     ??_display:	
   256                           ; 1 bytes @ 0x4
   257                           
   258  0074                     display@p:	
   259                           ; 1 bytes @ 0x4
   260                           
   261                           
   262                           ; 1 bytes @ 0x4
   263  0074                     	ds	1
   264  0075                     ??_main:
   265                           
   266                           ; 1 bytes @ 0x5
   267  0075                     	ds	3
   268  0078                     main@j:
   269                           
   270                           ; 2 bytes @ 0x8
   271  0078                     	ds	2
   272                           
   273                           	psect	maintext
   274  0786                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 20 in file "lcd.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  j               2    8[COMMON] int 
   285 ;;  i               2    0        int 
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         0       0       0       0       0
   296 ;;      Locals:         2       0       0       0       0
   297 ;;      Temps:          3       0       0       0       0
   298 ;;      Totals:         5       0       0       0       0
   299 ;;Total ram usage:        5 bytes
   300 ;; Hardware stack levels required when called:    2
   301 ;; This function calls:
   302 ;;		_cmd
   303 ;;		_data
   304 ;;		_display
   305 ;;		_init
   306 ;;		_singlestring
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _main
   314  0786                     _main:
   315  0786                     l738:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   318                           
   319                           
   320                           ;lcd.c: 22: int i;;lcd.c: 23: int j;;lcd.c: 24: const char a[]="ABID";;lcd.c: 25: init()
      +                          ;
   321  0786  120A  118A  26D5  120A  118A  	fcall	_init
   322  078B                     l740:
   323                           
   324                           ;lcd.c: 26: cmd(0x01);
   325  078B  3001               	movlw	1
   326  078C  120A  118A  26FA  120A  118A  	fcall	_cmd
   327  0791                     l742:
   328                           
   329                           ;lcd.c: 27: cmd(0x02);
   330  0791  3002               	movlw	2
   331  0792  120A  118A  26FA  120A  118A  	fcall	_cmd
   332  0797                     l744:
   333                           
   334                           ;lcd.c: 28: cmd(0x0f);
   335  0797  300F               	movlw	15
   336  0798  120A  118A  26FA  120A  118A  	fcall	_cmd
   337  079D                     l746:
   338                           
   339                           ;lcd.c: 29: cmd(0x80);
   340  079D  3080               	movlw	128
   341  079E  120A  118A  26FA  120A  118A  	fcall	_cmd
   342  07A3                     l748:
   343                           
   344                           ;lcd.c: 30: cmd(0x06);
   345  07A3  3006               	movlw	6
   346  07A4  120A  118A  26FA  120A  118A  	fcall	_cmd
   347  07A9                     l750:
   348                           
   349                           ;lcd.c: 31: cmd(0x38);
   350  07A9  3038               	movlw	56
   351  07AA  120A  118A  26FA  120A  118A  	fcall	_cmd
   352  07AF                     l752:
   353                           
   354                           ;lcd.c: 32:  singlestring();
   355  07AF  120A  118A  2731  120A  118A  	fcall	_singlestring
   356                           
   357                           ;lcd.c: 33: _delay((unsigned long)((2000)*(4000000/4000.0)));
   358  07B4  300B               	movlw	11
   359  07B5  00F7               	movwf	??_main+2
   360  07B6  3026               	movlw	38
   361  07B7  00F6               	movwf	??_main+1
   362  07B8  305D               	movlw	93
   363  07B9  00F5               	movwf	??_main
   364  07BA                     u137:
   365  07BA  0BF5               	decfsz	??_main,f
   366  07BB  2FBA               	goto	u137
   367  07BC  0BF6               	decfsz	??_main+1,f
   368  07BD  2FBA               	goto	u137
   369  07BE  0BF7               	decfsz	??_main+2,f
   370  07BF  2FBA               	goto	u137
   371  07C0  2FC1               	nop2
   372  07C1                     l754:
   373                           
   374                           ;lcd.c: 34: display(a);
   375  07C1  3001               	movlw	(low ((main@a-__stringbase)| (0+32768)))& (0+255)
   376  07C2  120A  118A  2712  120A  118A  	fcall	_display
   377  07C7                     l756:
   378                           
   379                           ;lcd.c: 37: {;lcd.c: 38:    if(RC5==1)
   380  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   381  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   382  07C9  1E87               	btfss	7,5	;volatile
   383  07CA  2FCC               	goto	u81
   384  07CB  2FCD               	goto	u80
   385  07CC                     u81:
   386  07CC  2FE8               	goto	l768
   387  07CD                     u80:
   388  07CD                     l41:
   389  07CD  1A87               	btfsc	7,5	;volatile
   390  07CE  2FD0               	goto	u91
   391  07CF  2FD1               	goto	u90
   392  07D0                     u91:
   393  07D0  2FCD               	goto	l41
   394  07D1                     u90:
   395  07D1                     l760:
   396                           
   397                           ;lcd.c: 41: j++;
   398  07D1  3001               	movlw	1
   399  07D2  07F8               	addwf	main@j,f
   400  07D3  1803               	skipnc
   401  07D4  0AF9               	incf	main@j+1,f
   402  07D5  3000               	movlw	0
   403  07D6  07F9               	addwf	main@j+1,f
   404  07D7                     l762:
   405                           
   406                           ;lcd.c: 42: if(j%2==1)
   407  07D7  1C78               	btfss	main@j,0
   408  07D8  2FDA               	goto	u101
   409  07D9  2FDB               	goto	u100
   410  07DA                     u101:
   411  07DA  2FE2               	goto	l766
   412  07DB                     u100:
   413  07DB                     l764:
   414                           
   415                           ;lcd.c: 43: {;lcd.c: 44: cmd(0x0f);
   416  07DB  300F               	movlw	15
   417  07DC  120A  118A  26FA  120A  118A  	fcall	_cmd
   418                           
   419                           ;lcd.c: 45: }
   420  07E1  2FE8               	goto	l768
   421  07E2                     l766:
   422                           
   423                           ;lcd.c: 47: {;lcd.c: 48: cmd(0x08);
   424  07E2  3008               	movlw	8
   425  07E3  120A  118A  26FA  120A  118A  	fcall	_cmd
   426  07E8                     l768:
   427                           
   428                           ;lcd.c: 51: if(RC6==1)
   429  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   430  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   431  07EA  1F07               	btfss	7,6	;volatile
   432  07EB  2FED               	goto	u111
   433  07EC  2FEE               	goto	u110
   434  07ED                     u111:
   435  07ED  2FC7               	goto	l756
   436  07EE                     u110:
   437  07EE                     l47:
   438  07EE  1B07               	btfsc	7,6	;volatile
   439  07EF  2FF1               	goto	u121
   440  07F0  2FF2               	goto	u120
   441  07F1                     u121:
   442  07F1  2FEE               	goto	l47
   443  07F2                     u120:
   444  07F2                     l772:
   445                           
   446                           ;lcd.c: 54: data('a');
   447  07F2  3061               	movlw	97
   448  07F3  120A  118A  26E2  120A  118A  	fcall	_data
   449  07F8  2FC7               	goto	l756
   450  07F9  120A  118A  2800   	ljmp	start
   451  07FC                     __end_of_main:
   452                           
   453                           	psect	text1
   454  0731                     __ptext1:	
   455 ;; *************** function _singlestring *****************
   456 ;; Defined at:
   457 ;;		line 97 in file "lcd.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0, pclath, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; Hardware stack levels required when called:    1
   478 ;; This function calls:
   479 ;;		_cmd
   480 ;;		_data
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _singlestring
   488  0731                     _singlestring:
   489  0731                     l684:	
   490                           ;incstack = 0
   491                           ; Regs used in _singlestring: [wreg+status,2+status,0+pclath+cstack]
   492                           
   493                           
   494                           ;lcd.c: 99: cmd(0x18);
   495  0731  3018               	movlw	24
   496  0732  120A  118A  26FA  120A  118A  	fcall	_cmd
   497                           
   498                           ;lcd.c: 100: cmd(0x18);
   499  0737  3018               	movlw	24
   500  0738  120A  118A  26FA  120A  118A  	fcall	_cmd
   501                           
   502                           ;lcd.c: 101: cmd(0x18);
   503  073D  3018               	movlw	24
   504  073E  120A  118A  26FA  120A  118A  	fcall	_cmd
   505                           
   506                           ;lcd.c: 102: data('W');
   507  0743  3057               	movlw	87
   508  0744  120A  118A  26E2  120A  118A  	fcall	_data
   509                           
   510                           ;lcd.c: 103: data('e');
   511  0749  3065               	movlw	101
   512  074A  120A  118A  26E2  120A  118A  	fcall	_data
   513                           
   514                           ;lcd.c: 104: data('l');
   515  074F  306C               	movlw	108
   516  0750  120A  118A  26E2  120A  118A  	fcall	_data
   517                           
   518                           ;lcd.c: 105: data('c');
   519  0755  3063               	movlw	99
   520  0756  120A  118A  26E2  120A  118A  	fcall	_data
   521                           
   522                           ;lcd.c: 106: data('o');
   523  075B  306F               	movlw	111
   524  075C  120A  118A  26E2  120A  118A  	fcall	_data
   525                           
   526                           ;lcd.c: 107: data('m');
   527  0761  306D               	movlw	109
   528  0762  120A  118A  26E2  120A  118A  	fcall	_data
   529                           
   530                           ;lcd.c: 108: data('e');
   531  0767  3065               	movlw	101
   532  0768  120A  118A  26E2  120A  118A  	fcall	_data
   533                           
   534                           ;lcd.c: 109: data(' ');
   535  076D  3020               	movlw	32
   536  076E  120A  118A  26E2  120A  118A  	fcall	_data
   537                           
   538                           ;lcd.c: 111: cmd(0x1c);
   539  0773  301C               	movlw	28
   540  0774  120A  118A  26FA  120A  118A  	fcall	_cmd
   541                           
   542                           ;lcd.c: 112: cmd(0x1c);
   543  0779  301C               	movlw	28
   544  077A  120A  118A  26FA  120A  118A  	fcall	_cmd
   545                           
   546                           ;lcd.c: 113: cmd(0x1c);
   547  077F  301C               	movlw	28
   548  0780  120A  118A  26FA  120A  118A  	fcall	_cmd
   549  0785                     l64:
   550  0785  0008               	return
   551  0786                     __end_of_singlestring:
   552                           
   553                           	psect	text2
   554  06FA                     __ptext2:	
   555 ;; *************** function _cmd *****************
   556 ;; Defined at:
   557 ;;		line 77 in file "lcd.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  a               1    wreg     unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  a               1    3[COMMON] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0
   573 ;;      Temps:          3       0       0       0       0
   574 ;;      Totals:         4       0       0       0       0
   575 ;;Total ram usage:        4 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_main
   581 ;;		_singlestring
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _cmd
   587  06FA                     _cmd:
   588                           
   589                           ;incstack = 0
   590                           ; Regs used in _cmd: [wreg]
   591                           ;cmd@a stored from wreg
   592  06FA  00F3               	movwf	cmd@a
   593  06FB                     l662:
   594                           
   595                           ;lcd.c: 77: void cmd(unsigned char a);lcd.c: 78: {;lcd.c: 79:     RD1=0;
   596  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   597  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   598  06FD  1088               	bcf	8,1	;volatile
   599  06FE                     l664:
   600                           
   601                           ;lcd.c: 80:     PORTB=a;
   602  06FE  0873               	movf	cmd@a,w
   603  06FF  0086               	movwf	6	;volatile
   604  0700                     l666:
   605                           
   606                           ;lcd.c: 81:     RD0=1;
   607  0700  1408               	bsf	8,0	;volatile
   608                           
   609                           ;lcd.c: 82:     _delay((unsigned long)((500)*(4000000/4000.0)));
   610  0701  3003               	movlw	3
   611  0702  00F2               	movwf	??_cmd+2
   612  0703  308A               	movlw	138
   613  0704  00F1               	movwf	??_cmd+1
   614  0705  3055               	movlw	85
   615  0706  00F0               	movwf	??_cmd
   616  0707                     u147:
   617  0707  0BF0               	decfsz	??_cmd,f
   618  0708  2F07               	goto	u147
   619  0709  0BF1               	decfsz	??_cmd+1,f
   620  070A  2F07               	goto	u147
   621  070B  0BF2               	decfsz	??_cmd+2,f
   622  070C  2F07               	goto	u147
   623  070D  2F0E               	nop2
   624  070E                     l668:
   625                           
   626                           ;lcd.c: 83:     RD0=0;
   627  070E  1283               	bcf	3,5	;RP0=0, select bank0
   628  070F  1303               	bcf	3,6	;RP1=0, select bank0
   629  0710  1008               	bcf	8,0	;volatile
   630  0711                     l58:
   631  0711  0008               	return
   632  0712                     __end_of_cmd:
   633                           
   634                           	psect	text3
   635  06D5                     __ptext3:	
   636 ;; *************** function _init *****************
   637 ;; Defined at:
   638 ;;		line 66 in file "lcd.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		status,2
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0
   655 ;;      Totals:         0       0       0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _init
   667  06D5                     _init:
   668  06D5                     l678:	
   669                           ;incstack = 0
   670                           ; Regs used in _init: [status,2]
   671                           
   672                           
   673                           ;lcd.c: 67:     TRISD=0x00;
   674  06D5  1683               	bsf	3,5	;RP0=1, select bank1
   675  06D6  1303               	bcf	3,6	;RP1=0, select bank1
   676  06D7  0188               	clrf	8	;volatile
   677                           
   678                           ;lcd.c: 68:     TRISB=0x00;
   679  06D8  0186               	clrf	6	;volatile
   680                           
   681                           ;lcd.c: 69:     PORTD=0x00;
   682  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   683  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   684  06DB  0188               	clrf	8	;volatile
   685                           
   686                           ;lcd.c: 70:     PORTB= 0x00;
   687  06DC  0186               	clrf	6	;volatile
   688  06DD                     l680:
   689                           
   690                           ;lcd.c: 71:     TRISC5=1;
   691  06DD  1683               	bsf	3,5	;RP0=1, select bank1
   692  06DE  1303               	bcf	3,6	;RP1=0, select bank1
   693  06DF  1687               	bsf	7,5	;volatile
   694  06E0                     l682:
   695                           
   696                           ;lcd.c: 72:     TRISC6=1;
   697  06E0  1707               	bsf	7,6	;volatile
   698  06E1                     l55:
   699  06E1  0008               	return
   700  06E2                     __end_of_init:
   701                           
   702                           	psect	text4
   703  0712                     __ptext4:	
   704 ;; *************** function _display *****************
   705 ;; Defined at:
   706 ;;		line 119 in file "lcd.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  p               1    wreg     PTR const unsigned char 
   709 ;;		 -> main@a(5), 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  p               1    4[COMMON] PTR const unsigned char 
   712 ;;		 -> main@a(5), 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         0       0       0       0       0
   723 ;;      Locals:         1       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0
   725 ;;      Totals:         1       0       0       0       0
   726 ;;Total ram usage:        1 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    1
   729 ;; This function calls:
   730 ;;		_data
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _display
   738  0712                     _display:
   739                           
   740                           ;incstack = 0
   741                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   742                           ;display@p stored from wreg
   743  0712  00F4               	movwf	display@p
   744  0713                     l730:
   745                           
   746                           ;lcd.c: 119: void display(const char *p);lcd.c: 120: {;lcd.c: 121:     while(*p){
   747  0713  2F24               	goto	l736
   748  0714                     l732:
   749                           
   750                           ;lcd.c: 122:         data(*p);
   751  0714  0874               	movf	display@p,w
   752  0715  0084               	movwf	4
   753  0716  120A  118A  2003  120A  118A  	fcall	stringdir
   754  071B  120A  118A  26E2  120A  118A  	fcall	_data
   755  0720                     l734:
   756                           
   757                           ;lcd.c: 123:         p++;
   758  0720  3001               	movlw	1
   759  0721  00FF               	movwf	btemp+1
   760  0722  087F               	movf	btemp+1,w
   761  0723  07F4               	addwf	display@p,f
   762  0724                     l736:
   763                           
   764                           ;lcd.c: 121:     while(*p){
   765  0724  0874               	movf	display@p,w
   766  0725  0084               	movwf	4
   767  0726  120A  118A  2003  120A  118A  	fcall	stringdir
   768  072B  3A00               	xorlw	0
   769  072C  1D03               	skipz
   770  072D  2F2F               	goto	u71
   771  072E  2F30               	goto	u70
   772  072F                     u71:
   773  072F  2F14               	goto	l732
   774  0730                     u70:
   775  0730                     l70:
   776  0730  0008               	return
   777  0731                     __end_of_display:
   778                           
   779                           	psect	text5
   780  06E2                     __ptext5:	
   781 ;; *************** function _data *****************
   782 ;; Defined at:
   783 ;;		line 87 in file "lcd.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  a               1    wreg     unsigned char 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  a               1    3[COMMON] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         1       0       0       0       0
   799 ;;      Temps:          3       0       0       0       0
   800 ;;      Totals:         4       0       0       0       0
   801 ;;Total ram usage:        4 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_main
   807 ;;		_singlestring
   808 ;;		_display
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _data
   814  06E2                     _data:
   815                           
   816                           ;incstack = 0
   817                           ; Regs used in _data: [wreg]
   818                           ;data@a stored from wreg
   819  06E2  00F3               	movwf	data@a
   820  06E3                     l670:
   821                           
   822                           ;lcd.c: 87: void data(char a);lcd.c: 88: {;lcd.c: 89:     RD1=1;
   823  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   824  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   825  06E5  1488               	bsf	8,1	;volatile
   826  06E6                     l672:
   827                           
   828                           ;lcd.c: 90:     PORTB=a;
   829  06E6  0873               	movf	data@a,w
   830  06E7  0086               	movwf	6	;volatile
   831  06E8                     l674:
   832                           
   833                           ;lcd.c: 91:     RD0=1;
   834  06E8  1408               	bsf	8,0	;volatile
   835                           
   836                           ;lcd.c: 92:     _delay((unsigned long)((500)*(4000000/4000.0)));
   837  06E9  3003               	movlw	3
   838  06EA  00F2               	movwf	??_data+2
   839  06EB  308A               	movlw	138
   840  06EC  00F1               	movwf	??_data+1
   841  06ED  3055               	movlw	85
   842  06EE  00F0               	movwf	??_data
   843  06EF                     u157:
   844  06EF  0BF0               	decfsz	??_data,f
   845  06F0  2EEF               	goto	u157
   846  06F1  0BF1               	decfsz	??_data+1,f
   847  06F2  2EEF               	goto	u157
   848  06F3  0BF2               	decfsz	??_data+2,f
   849  06F4  2EEF               	goto	u157
   850  06F5  2EF6               	nop2
   851  06F6                     l676:
   852                           
   853                           ;lcd.c: 93:     RD0=0;
   854  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   855  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   856  06F8  1008               	bcf	8,0	;volatile
   857  06F9                     l61:
   858  06F9  0008               	return
   859  06FA                     __end_of_data:
   860  007E                     btemp	set	126	;btemp
   861  007E                     wtemp0	set	126
   862                           
   863                           	psect	config
   864                           
   865                           ;Config register CONFIG @ 0x2007
   866                           ;	Oscillator Selection bits
   867                           ;	FOSC = XT, XT oscillator
   868                           ;	Watchdog Timer Enable bit
   869                           ;	WDTE = OFF, WDT disabled
   870                           ;	Power-up Timer Enable bit
   871                           ;	PWRTE = ON, PWRT enabled
   872                           ;	Brown-out Reset Enable bit
   873                           ;	BOREN = ON, BOR enabled
   874                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   875                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   876                           ;	Data EEPROM Memory Code Protection bit
   877                           ;	CPD = OFF, Data EEPROM code protection off
   878                           ;	Flash Program Memory Write Enable bits
   879                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   880                           ;	In-Circuit Debugger Mode bit
   881                           ;	DEBUG = 0x1, unprogrammed default
   882                           ;	Flash Program Memory Code Protection bit
   883                           ;	CP = OFF, Code protection off
   884  2007                     	org	8199
   885  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 5
		 -> main@a(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_display
    _singlestring->_cmd
    _singlestring->_data
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     176
                                              5 COMMON     5     5      0
                                _cmd
                               _data
                            _display
                               _init
                       _singlestring
 ---------------------------------------------------------------------------------
 (1) _singlestring                                         0     0      0      30
                                _cmd
                               _data
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0      93
                                              4 COMMON     1     1      0
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _data
   _display
     _data
   _init
   _singlestring
     _cmd
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 20:41:38 2020

                      pc 0002                       l41 07CD                       l61 06F9  
                     l70 0730                       l55 06E1                       l47 07EE  
                     l64 0785                       l58 0711                       u70 0730  
                     u71 072F                       u80 07CD                       u81 07CC  
                     u90 07D1                       u91 07D0                       fsr 0004  
                    l730 0713                      l732 0714                      l740 078B  
                    l670 06E3                      l734 0720                      l662 06FB  
                    l750 07A9                      l742 0791                      l672 06E6  
                    l736 0724                      l680 06DD                      l664 06FE  
                    l760 07D1                      l752 07AF                      l744 0797  
                    l674 06E8                      l682 06E0                      l666 0700  
                    l762 07D7                      l754 07C1                      l746 079D  
                    l738 0786                      l676 06F6                      l668 070E  
                    l684 0731                      l772 07F2                      l764 07DB  
                    l756 07C7                      l748 07A3                      l678 06D5  
                    l766 07E2                      l768 07E8                      _RD0 0040  
                    _RD1 0041                      _RC5 003D                      u100 07DB  
                    _RC6 003E                      u101 07DA                      u110 07EE  
                    u111 07ED                      u120 07F2                      u121 07F1  
                    u137 07BA                      u147 0707                      u157 06EF  
                    _cmd 06FA                      fsr0 0004                     ?_cmd 0070  
                   _data 06E2                     cmd@a 0073                     _main 0786  
                   _init 06D5                     btemp 007E                     start 0000  
                  ??_cmd 0070                    ?_data 0070                    ?_main 0070  
                  ?_init 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088          __end_of_display 0731  
                  data@a 0073                    main@a 0009                    main@j 0078  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_data 06FA             __end_of_main 07FC  
           __end_of_init 06E2                   ??_data 0070                   ??_main 0075  
                 ??_init 0070                   _TRISC5 043D                   _TRISC6 043E  
              ??_display 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_ofmain@a 000E               __pmaintext 0786               __stringtab 0003  
                __ptext1 0731                  __ptext2 06FA                  __ptext3 06D5  
                __ptext4 0712                  __ptext5 06E2                  _display 0712  
           __size_of_cmd 0018     end_of_initialization 07FC            ?_singlestring 0070  
         ??_singlestring 0074      start_initialization 07FC              __end_of_cmd 0712  
              ___latbits 0002                __pstrings 0003                 ?_display 0070  
   __end_of_singlestring 0786              __stringbase 0008       __end_of__stringtab 0009  
       __size_of_display 001F            __size_of_data 0018            __size_of_main 0076  
          __size_of_init 000D    __size_of_singlestring 0055                 display@p 0074  
           _singlestring 0731                stringcode 0003                 stringdir 0003  
               stringtab 0003  



Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Aug 19 19:33:58 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.20
    12                           ; Generated 09/04/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0015                     _CCPR1L	set	21
   166  00BD                     _CCP1X	set	189
   167  00BC                     _CCP1Y	set	188
   168  0092                     _TMR2ON	set	146
   169  0091                     _T2CKPS1	set	145
   170  0090                     _T2CKPS0	set	144
   171  00BA                     _CCP1M2	set	186
   172  00BB                     _CCP1M3	set	187
   173  0092                     _PR2	set	146
   174  043A                     _TRISC2	set	1082
   175                           
   176                           	psect	cinit
   177  07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180  07FC                     __initialization:
   181  07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184  07FC                     __end_of__initialization:
   185  07FC  0183               	clrf	3
   186  07FD  120A  118A  2F95   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189  0070                     __pcstackCOMMON:
   190  0070                     ?_PWM1_Set_Duty:
   191  0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     PWM1_Set_Duty@DC:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 2 bytes @ 0x0
   199  0070                     	ds	2
   200  0072                     ??_PWM1_Set_Duty:
   201                           
   202                           ; 1 bytes @ 0x2
   203  0072                     	ds	2
   204  0074                     ??_main:
   205                           
   206                           ; 1 bytes @ 0x4
   207  0074                     	ds	2
   208  0076                     main@DC:
   209                           
   210                           ; 2 bytes @ 0x6
   211  0076                     	ds	2
   212                           
   213                           	psect	maintext
   214  0795                     __pmaintext:	
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 14 in file "pwm.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;  DC              2    6[COMMON] unsigned int 
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0, pclath, cstack
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         2       0       0       0       0
   236 ;;      Temps:          2       0       0       0       0
   237 ;;      Totals:         4       0       0       0       0
   238 ;;Total ram usage:        4 bytes
   239 ;; Hardware stack levels required when called:    1
   240 ;; This function calls:
   241 ;;		_PWM1_Set_Duty
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           
   248                           ;psect for function _main
   249  0795                     _main:
   250  0795                     l680:	
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   253                           
   254                           
   255                           ;pwm.c: 17:   CCP1M3 = 1;
   256  0795  1283               	bcf	3,5	;RP0=0, select bank0
   257  0796  1303               	bcf	3,6	;RP1=0, select bank0
   258  0797  1597               	bsf	23,3	;volatile
   259                           
   260                           ;pwm.c: 18:   CCP1M2 = 1;
   261  0798  1517               	bsf	23,2	;volatile
   262                           
   263                           ;pwm.c: 19:   TRISC2 = 0;
   264  0799  1683               	bsf	3,5	;RP0=1, select bank1
   265  079A  1303               	bcf	3,6	;RP1=0, select bank1
   266  079B  1107               	bcf	7,2	;volatile
   267  079C                     l682:
   268                           
   269                           ;pwm.c: 21:   PR2 = 124;
   270  079C  307C               	movlw	124
   271  079D  0092               	movwf	18	;volatile
   272  079E                     l684:
   273                           
   274                           ;pwm.c: 23:   T2CKPS0 = 1;
   275  079E  1283               	bcf	3,5	;RP0=0, select bank0
   276  079F  1303               	bcf	3,6	;RP1=0, select bank0
   277  07A0  1412               	bsf	18,0	;volatile
   278  07A1                     l686:
   279                           
   280                           ;pwm.c: 24:   T2CKPS1 = 0;
   281  07A1  1092               	bcf	18,1	;volatile
   282  07A2                     l688:
   283                           
   284                           ;pwm.c: 26:   TMR2ON = 1;
   285  07A2  1512               	bsf	18,2	;volatile
   286  07A3                     l690:
   287  07A3                     l692:
   288                           
   289                           ;pwm.c: 30:   {;pwm.c: 31:     DC = 0;
   290  07A3  01F6               	clrf	main@DC
   291  07A4  01F7               	clrf	main@DC+1
   292                           
   293                           ;pwm.c: 33:     while (DC<500)
   294  07A5  2FBE               	goto	l700
   295  07A6                     l694:
   296                           
   297                           ;pwm.c: 34:     {;pwm.c: 35:       PWM1_Set_Duty(DC);
   298  07A6  0877               	movf	main@DC+1,w
   299  07A7  00F1               	movwf	PWM1_Set_Duty@DC+1
   300  07A8  0876               	movf	main@DC,w
   301  07A9  00F0               	movwf	PWM1_Set_Duty@DC
   302  07AA  120A  118A  2774  120A  118A  	fcall	_PWM1_Set_Duty
   303  07AF                     l696:
   304                           
   305                           ;pwm.c: 36:       DC++;
   306  07AF  3001               	movlw	1
   307  07B0  07F6               	addwf	main@DC,f
   308  07B1  1803               	skipnc
   309  07B2  0AF7               	incf	main@DC+1,f
   310  07B3  3000               	movlw	0
   311  07B4  07F7               	addwf	main@DC+1,f
   312  07B5                     l698:
   313                           
   314                           ;pwm.c: 37:       _delay((unsigned long)((2)*(4000000/4000.0)));
   315  07B5  3003               	movlw	3
   316  07B6  00F5               	movwf	??_main+1
   317  07B7  3097               	movlw	151
   318  07B8  00F4               	movwf	??_main
   319  07B9                     u117:
   320  07B9  0BF4               	decfsz	??_main,f
   321  07BA  2FB9               	goto	u117
   322  07BB  0BF5               	decfsz	??_main+1,f
   323  07BC  2FB9               	goto	u117
   324  07BD  2FBE               	nop2
   325  07BE                     l700:
   326                           
   327                           ;pwm.c: 33:     while (DC<500)
   328  07BE  3001               	movlw	1
   329  07BF  0277               	subwf	main@DC+1,w
   330  07C0  30F4               	movlw	244
   331  07C1  1903               	skipnz
   332  07C2  0276               	subwf	main@DC,w
   333  07C3  1C03               	skipc
   334  07C4  2FC6               	goto	u91
   335  07C5  2FC7               	goto	u90
   336  07C6                     u91:
   337  07C6  2FA6               	goto	l694
   338  07C7                     u90:
   339  07C7                     l702:
   340                           
   341                           ;pwm.c: 39:     _delay((unsigned long)((100)*(4000000/4000.0)));
   342  07C7  3082               	movlw	130
   343  07C8  00F5               	movwf	??_main+1
   344  07C9  30DD               	movlw	221
   345  07CA  00F4               	movwf	??_main
   346  07CB                     u127:
   347  07CB  0BF4               	decfsz	??_main,f
   348  07CC  2FCB               	goto	u127
   349  07CD  0BF5               	decfsz	??_main+1,f
   350  07CE  2FCB               	goto	u127
   351  07CF  2FD0               	nop2
   352                           
   353                           ;pwm.c: 41:     while(DC>0)
   354  07D0  2FE9               	goto	l710
   355  07D1                     l704:
   356                           
   357                           ;pwm.c: 42:     {;pwm.c: 43:       PWM1_Set_Duty(DC);
   358  07D1  0877               	movf	main@DC+1,w
   359  07D2  00F1               	movwf	PWM1_Set_Duty@DC+1
   360  07D3  0876               	movf	main@DC,w
   361  07D4  00F0               	movwf	PWM1_Set_Duty@DC
   362  07D5  120A  118A  2774  120A  118A  	fcall	_PWM1_Set_Duty
   363  07DA                     l706:
   364                           
   365                           ;pwm.c: 44:       DC--;
   366  07DA  3001               	movlw	1
   367  07DB  02F6               	subwf	main@DC,f
   368  07DC  3000               	movlw	0
   369  07DD  1C03               	skipc
   370  07DE  03F7               	decf	main@DC+1,f
   371  07DF  02F7               	subwf	main@DC+1,f
   372  07E0                     l708:
   373                           
   374                           ;pwm.c: 45:       _delay((unsigned long)((2)*(4000000/4000.0)));
   375  07E0  3003               	movlw	3
   376  07E1  00F5               	movwf	??_main+1
   377  07E2  3097               	movlw	151
   378  07E3  00F4               	movwf	??_main
   379  07E4                     u137:
   380  07E4  0BF4               	decfsz	??_main,f
   381  07E5  2FE4               	goto	u137
   382  07E6  0BF5               	decfsz	??_main+1,f
   383  07E7  2FE4               	goto	u137
   384  07E8  2FE9               	nop2
   385  07E9                     l710:
   386                           
   387                           ;pwm.c: 41:     while(DC>0)
   388  07E9  0876               	movf	main@DC,w
   389  07EA  0477               	iorwf	main@DC+1,w
   390  07EB  1D03               	btfss	3,2
   391  07EC  2FEE               	goto	u101
   392  07ED  2FEF               	goto	u100
   393  07EE                     u101:
   394  07EE  2FD1               	goto	l704
   395  07EF                     u100:
   396  07EF                     l712:
   397                           
   398                           ;pwm.c: 47:     _delay((unsigned long)((100)*(4000000/4000.0)));
   399  07EF  3082               	movlw	130
   400  07F0  00F5               	movwf	??_main+1
   401  07F1  30DD               	movlw	221
   402  07F2  00F4               	movwf	??_main
   403  07F3                     u147:
   404  07F3  0BF4               	decfsz	??_main,f
   405  07F4  2FF3               	goto	u147
   406  07F5  0BF5               	decfsz	??_main+1,f
   407  07F6  2FF3               	goto	u147
   408  07F7  2FF8               	nop2
   409  07F8  2FA3               	goto	l692
   410  07F9  120A  118A  2800   	ljmp	start
   411  07FC                     __end_of_main:
   412                           
   413                           	psect	text1
   414  0774                     __ptext1:	
   415 ;; *************** function _PWM1_Set_Duty *****************
   416 ;; Defined at:
   417 ;;		line 51 in file "pwm.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;  DC              2    0[COMMON] unsigned int 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         2       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0
   433 ;;      Temps:          2       0       0       0       0
   434 ;;      Totals:         4       0       0       0       0
   435 ;;Total ram usage:        4 bytes
   436 ;; Hardware stack levels used:    1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _PWM1_Set_Duty
   446  0774                     _PWM1_Set_Duty:
   447  0774                     l674:	
   448                           ;incstack = 0
   449                           ; Regs used in _PWM1_Set_Duty: [wreg+status,2+status,0]
   450                           
   451                           
   452                           ;pwm.c: 51: void PWM1_Set_Duty(uint16_t DC);pwm.c: 52: {;pwm.c: 54:   if(DC<1024)
   453  0774  3004               	movlw	4
   454  0775  0271               	subwf	PWM1_Set_Duty@DC+1,w
   455  0776  3000               	movlw	0
   456  0777  1903               	skipnz
   457  0778  0270               	subwf	PWM1_Set_Duty@DC,w
   458  0779  1803               	skipnc
   459  077A  2F7C               	goto	u61
   460  077B  2F7D               	goto	u60
   461  077C                     u61:
   462  077C  2F94               	goto	l42
   463  077D                     u60:
   464  077D                     l676:
   465                           
   466                           ;pwm.c: 55:   {;pwm.c: 56:     CCP1Y = DC & 1;
   467  077D  1870               	btfsc	PWM1_Set_Duty@DC,0
   468  077E  2F80               	goto	u71
   469  077F  2F84               	goto	u70
   470  0780                     u71:
   471  0780  1283               	bcf	3,5	;RP0=0, select bank0
   472  0781  1303               	bcf	3,6	;RP1=0, select bank0
   473  0782  1617               	bsf	23,4	;volatile
   474  0783  2F87               	goto	u84
   475  0784                     u70:
   476  0784  1283               	bcf	3,5	;RP0=0, select bank0
   477  0785  1303               	bcf	3,6	;RP1=0, select bank0
   478  0786  1217               	bcf	23,4	;volatile
   479  0787                     u84:
   480                           
   481                           ;pwm.c: 57:     CCP1X = DC & 2;
   482  0787  1297               	bcf	23,5	;volatile
   483  0788                     l678:
   484                           
   485                           ;pwm.c: 58:     CCPR1L = DC >> 2;
   486  0788  0871               	movf	PWM1_Set_Duty@DC+1,w
   487  0789  00F3               	movwf	??_PWM1_Set_Duty+1
   488  078A  0870               	movf	PWM1_Set_Duty@DC,w
   489  078B  00F2               	movwf	??_PWM1_Set_Duty
   490  078C  1003               	clrc
   491  078D  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   492  078E  0CF2               	rrf	??_PWM1_Set_Duty,f
   493  078F  1003               	clrc
   494  0790  0CF3               	rrf	??_PWM1_Set_Duty+1,f
   495  0791  0CF2               	rrf	??_PWM1_Set_Duty,f
   496  0792  0872               	movf	??_PWM1_Set_Duty,w
   497  0793  0095               	movwf	21	;volatile
   498  0794                     l42:
   499  0794  0008               	return
   500  0795                     __end_of_PWM1_Set_Duty:
   501  007E                     btemp	set	126	;btemp
   502  007E                     wtemp0	set	126
   503                           
   504                           	psect	config
   505                           
   506                           ;Config register CONFIG @ 0x2007
   507                           ;	Oscillator Selection bits
   508                           ;	FOSC = XT, XT oscillator
   509                           ;	Watchdog Timer Enable bit
   510                           ;	WDTE = OFF, WDT disabled
   511                           ;	Power-up Timer Enable bit
   512                           ;	PWRTE = ON, PWRT enabled
   513                           ;	Brown-out Reset Enable bit
   514                           ;	BOREN = ON, BOR enabled
   515                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   516                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   517                           ;	Data EEPROM Memory Code Protection bit
   518                           ;	CPD = OFF, Data EEPROM code protection off
   519                           ;	Flash Program Memory Write Enable bits
   520                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   521                           ;	In-Circuit Debugger Mode bit
   522                           ;	DEBUG = 0x1, unprogrammed default
   523                           ;	Flash Program Memory Code Protection bit
   524                           ;	CP = OFF, Code protection off
   525  2007                     	org	8199
   526  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM1_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     310
                                              4 COMMON     4     4      0
                      _PWM1_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Aug 19 19:33:58 2020

                     l42 0794                       u60 077D                       u61 077C  
                     u70 0784                       u71 0780                       u90 07C7  
                     u91 07C6                       u84 0787                      l700 07BE  
                    l710 07E9                      l702 07C7                      l712 07EF  
                    l704 07D1                      l706 07DA                      l708 07E0  
                    l680 0795                      l674 0774                      l690 07A3  
                    l682 079C                      l676 077D                      l692 07A3  
                    l684 079E                      l678 0788                      l694 07A6  
                    l686 07A1                      l696 07AF                      l688 07A2  
                    l698 07B5                      u100 07EF                      u101 07EE  
                    u117 07B9                      u127 07CB                      u137 07E4  
                    u147 07F3                      _PR2 0092                     _main 0795  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCPR1L 0015                   _TMR2ON 0092                   _TRISC2 043A  
                 main@DC 0076  __end_of__initialization 07FC           __pcstackCOMMON 0070  
  __end_of_PWM1_Set_Duty 0795               __pmaintext 0795                  _T2CKPS0 0090  
                _T2CKPS1 0091                  __ptext1 0774     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002   __size_of_PWM1_Set_Duty 0021  
          _PWM1_Set_Duty 0774           ?_PWM1_Set_Duty 0070            __size_of_main 0067  
        ??_PWM1_Set_Duty 0072          PWM1_Set_Duty@DC 0070  

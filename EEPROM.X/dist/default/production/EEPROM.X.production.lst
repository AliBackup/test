

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 21 17:37:38 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 09/04/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  000B                     _INTCONbits	set	11
   167  0008                     _PORTD	set	8
   168  0030                     _RB0	set	48
   169  0033                     _RB3	set	51
   170  0032                     _RB2	set	50
   171  0031                     _RB1	set	49
   172  0088                     _TRISD	set	136
   173  0086                     _TRISB	set	134
   174  010C                     _EEDATA	set	268
   175  010D                     _EEADR	set	269
   176  018D                     _EECON2	set	397
   177  018C                     _EECON1bits	set	396
   178                           
   179                           	psect	cinit
   180  07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183  07FC                     __initialization:
   184  07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  07FC                     __end_of__initialization:
   188  07FC  0183               	clrf	3
   189  07FD  120A  118A  2F5E   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192  0070                     __pcstackCOMMON:
   193  0070                     ?_EEPROM_Write:
   194  0070                     ?_EEPROM_Read:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ??_EEPROM_Read:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     EEPROM_Write@Data:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     EEPROM_Read@Address:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211  0070                     	ds	1
   212  0071                     ??_EEPROM_Write:
   213  0071                     EEPROM_Write@Address:	
   214                           ; 1 bytes @ 0x1
   215                           
   216  0071                     EEPROM_Read@Data:	
   217                           ; 1 bytes @ 0x1
   218                           
   219                           
   220                           ; 1 bytes @ 0x1
   221  0071                     	ds	1
   222  0072                     ??_main:
   223                           
   224                           ; 1 bytes @ 0x2
   225  0072                     	ds	3
   226  0075                     main@i:
   227                           
   228                           ; 1 bytes @ 0x5
   229  0075                     	ds	1
   230  0076                     main@Address:
   231                           
   232                           ; 1 bytes @ 0x6
   233  0076                     	ds	1
   234                           
   235                           	psect	maintext
   236  075E                     __pmaintext:	
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 22 in file "EEPROM.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  i               1    5[COMMON] unsigned char 
   247 ;;  Address         1    6[COMMON] unsigned char 
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : B00/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   257 ;;      Params:         0       0       0       0       0
   258 ;;      Locals:         2       0       0       0       0
   259 ;;      Temps:          3       0       0       0       0
   260 ;;      Totals:         5       0       0       0       0
   261 ;;Total ram usage:        5 bytes
   262 ;; Hardware stack levels required when called:    1
   263 ;; This function calls:
   264 ;;		_EEPROM_Read
   265 ;;		_EEPROM_Write
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _main
   273  075E                     _main:
   274  075E                     l746:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   277                           
   278                           
   279                           ;EEPROM.c: 25:   TRISB = 0x0F;
   280  075E  300F               	movlw	15
   281  075F  1683               	bsf	3,5	;RP0=1, select bank1
   282  0760  1303               	bcf	3,6	;RP1=0, select bank1
   283  0761  0086               	movwf	6	;volatile
   284  0762                     l748:
   285                           
   286                           ;EEPROM.c: 26:   TRISD = 0x00;
   287  0762  0188               	clrf	8	;volatile
   288  0763                     l750:
   289                           
   290                           ;EEPROM.c: 27:   PORTD = 0x00;
   291  0763  1283               	bcf	3,5	;RP0=0, select bank0
   292  0764  1303               	bcf	3,6	;RP1=0, select bank0
   293  0765  0188               	clrf	8	;volatile
   294  0766                     l752:
   295                           
   296                           ;EEPROM.c: 28:   uint8_t Address=0;
   297  0766  01F6               	clrf	main@Address
   298  0767                     l754:
   299                           
   300                           ;EEPROM.c: 31:   {;EEPROM.c: 32:     if(RB1)
   301  0767  1283               	bcf	3,5	;RP0=0, select bank0
   302  0768  1303               	bcf	3,6	;RP1=0, select bank0
   303  0769  1C86               	btfss	6,1	;volatile
   304  076A  2F6C               	goto	u91
   305  076B  2F6D               	goto	u90
   306  076C                     u91:
   307  076C  2F88               	goto	l762
   308  076D                     u90:
   309  076D                     l756:
   310                           
   311                           ;EEPROM.c: 33:     {;EEPROM.c: 34:       EEPROM_Write(Address++, 3);
   312  076D  3003               	movlw	3
   313  076E  00FF               	movwf	btemp+1
   314  076F  087F               	movf	btemp+1,w
   315  0770  00F0               	movwf	EEPROM_Write@Data
   316  0771  0876               	movf	main@Address,w
   317  0772  120A  118A  2743  120A  118A  	fcall	_EEPROM_Write
   318  0777                     l758:
   319  0777  3001               	movlw	1
   320  0778  00FF               	movwf	btemp+1
   321  0779  087F               	movf	btemp+1,w
   322  077A  07F6               	addwf	main@Address,f
   323  077B                     l760:
   324                           
   325                           ;EEPROM.c: 35:       _delay((unsigned long)((500)*(4000000/4000.0)));
   326  077B  3003               	movlw	3
   327  077C  00F4               	movwf	??_main+2
   328  077D  308A               	movlw	138
   329  077E  00F3               	movwf	??_main+1
   330  077F  3055               	movlw	85
   331  0780  00F2               	movwf	??_main
   332  0781                     u157:
   333  0781  0BF2               	decfsz	??_main,f
   334  0782  2F81               	goto	u157
   335  0783  0BF3               	decfsz	??_main+1,f
   336  0784  2F81               	goto	u157
   337  0785  0BF4               	decfsz	??_main+2,f
   338  0786  2F81               	goto	u157
   339  0787  2F88               	nop2
   340  0788                     l762:
   341                           
   342                           ;EEPROM.c: 37:     if(RB2)
   343  0788  1283               	bcf	3,5	;RP0=0, select bank0
   344  0789  1303               	bcf	3,6	;RP1=0, select bank0
   345  078A  1D06               	btfss	6,2	;volatile
   346  078B  2F8D               	goto	u101
   347  078C  2F8E               	goto	u100
   348  078D                     u101:
   349  078D  2FA9               	goto	l770
   350  078E                     u100:
   351  078E                     l764:
   352                           
   353                           ;EEPROM.c: 38:     {;EEPROM.c: 39:       EEPROM_Write(Address++, 5);
   354  078E  3005               	movlw	5
   355  078F  00FF               	movwf	btemp+1
   356  0790  087F               	movf	btemp+1,w
   357  0791  00F0               	movwf	EEPROM_Write@Data
   358  0792  0876               	movf	main@Address,w
   359  0793  120A  118A  2743  120A  118A  	fcall	_EEPROM_Write
   360  0798                     l766:
   361  0798  3001               	movlw	1
   362  0799  00FF               	movwf	btemp+1
   363  079A  087F               	movf	btemp+1,w
   364  079B  07F6               	addwf	main@Address,f
   365  079C                     l768:
   366                           
   367                           ;EEPROM.c: 40:       _delay((unsigned long)((500)*(4000000/4000.0)));
   368  079C  3003               	movlw	3
   369  079D  00F4               	movwf	??_main+2
   370  079E  308A               	movlw	138
   371  079F  00F3               	movwf	??_main+1
   372  07A0  3055               	movlw	85
   373  07A1  00F2               	movwf	??_main
   374  07A2                     u167:
   375  07A2  0BF2               	decfsz	??_main,f
   376  07A3  2FA2               	goto	u167
   377  07A4  0BF3               	decfsz	??_main+1,f
   378  07A5  2FA2               	goto	u167
   379  07A6  0BF4               	decfsz	??_main+2,f
   380  07A7  2FA2               	goto	u167
   381  07A8  2FA9               	nop2
   382  07A9                     l770:
   383                           
   384                           ;EEPROM.c: 42:     if(RB3)
   385  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   386  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   387  07AB  1D86               	btfss	6,3	;volatile
   388  07AC  2FAE               	goto	u111
   389  07AD  2FAF               	goto	u110
   390  07AE                     u111:
   391  07AE  2FCA               	goto	l778
   392  07AF                     u110:
   393  07AF                     l772:
   394                           
   395                           ;EEPROM.c: 43:     {;EEPROM.c: 44:       EEPROM_Write(Address++, 7);
   396  07AF  3007               	movlw	7
   397  07B0  00FF               	movwf	btemp+1
   398  07B1  087F               	movf	btemp+1,w
   399  07B2  00F0               	movwf	EEPROM_Write@Data
   400  07B3  0876               	movf	main@Address,w
   401  07B4  120A  118A  2743  120A  118A  	fcall	_EEPROM_Write
   402  07B9                     l774:
   403  07B9  3001               	movlw	1
   404  07BA  00FF               	movwf	btemp+1
   405  07BB  087F               	movf	btemp+1,w
   406  07BC  07F6               	addwf	main@Address,f
   407  07BD                     l776:
   408                           
   409                           ;EEPROM.c: 45:       _delay((unsigned long)((500)*(4000000/4000.0)));
   410  07BD  3003               	movlw	3
   411  07BE  00F4               	movwf	??_main+2
   412  07BF  308A               	movlw	138
   413  07C0  00F3               	movwf	??_main+1
   414  07C1  3055               	movlw	85
   415  07C2  00F2               	movwf	??_main
   416  07C3                     u177:
   417  07C3  0BF2               	decfsz	??_main,f
   418  07C4  2FC3               	goto	u177
   419  07C5  0BF3               	decfsz	??_main+1,f
   420  07C6  2FC3               	goto	u177
   421  07C7  0BF4               	decfsz	??_main+2,f
   422  07C8  2FC3               	goto	u177
   423  07C9  2FCA               	nop2
   424  07CA                     l778:
   425                           
   426                           ;EEPROM.c: 47:     if(Address == 3)
   427  07CA  3003               	movlw	3
   428  07CB  0676               	xorwf	main@Address,w
   429  07CC  1D03               	btfss	3,2
   430  07CD  2FCF               	goto	u121
   431  07CE  2FD0               	goto	u120
   432  07CF                     u121:
   433  07CF  2FD1               	goto	l782
   434  07D0                     u120:
   435  07D0                     l780:
   436                           
   437                           ;EEPROM.c: 48:       Address = 0;
   438  07D0  01F6               	clrf	main@Address
   439  07D1                     l782:
   440                           
   441                           ;EEPROM.c: 49:     if(RB0 == 1)
   442  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   443  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   444  07D3  1C06               	btfss	6,0	;volatile
   445  07D4  2FD6               	goto	u131
   446  07D5  2FD7               	goto	u130
   447  07D6                     u131:
   448  07D6  2F67               	goto	l754
   449  07D7                     u130:
   450  07D7                     l784:
   451                           
   452                           ;EEPROM.c: 50:     {;EEPROM.c: 52:       for (uint8_t i=0; i<3; i++)
   453  07D7  01F5               	clrf	main@i
   454  07D8                     l790:
   455                           
   456                           ;EEPROM.c: 53:       {;EEPROM.c: 54:         PORTD = EEPROM_Read(i);
   457  07D8  0875               	movf	main@i,w
   458  07D9  120A  118A  2732  120A  118A  	fcall	_EEPROM_Read
   459  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   460  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   461  07E0  0088               	movwf	8	;volatile
   462  07E1                     l792:
   463                           
   464                           ;EEPROM.c: 55:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   465  07E1  3006               	movlw	6
   466  07E2  00F4               	movwf	??_main+2
   467  07E3  3013               	movlw	19
   468  07E4  00F3               	movwf	??_main+1
   469  07E5  30AD               	movlw	173
   470  07E6  00F2               	movwf	??_main
   471  07E7                     u187:
   472  07E7  0BF2               	decfsz	??_main,f
   473  07E8  2FE7               	goto	u187
   474  07E9  0BF3               	decfsz	??_main+1,f
   475  07EA  2FE7               	goto	u187
   476  07EB  0BF4               	decfsz	??_main+2,f
   477  07EC  2FE7               	goto	u187
   478  07ED  2FEE               	nop2
   479  07EE                     l794:
   480                           
   481                           ;EEPROM.c: 56:       }
   482  07EE  3001               	movlw	1
   483  07EF  00FF               	movwf	btemp+1
   484  07F0  087F               	movf	btemp+1,w
   485  07F1  07F5               	addwf	main@i,f
   486  07F2                     l796:
   487  07F2  3003               	movlw	3
   488  07F3  0275               	subwf	main@i,w
   489  07F4  1C03               	skipc
   490  07F5  2FF7               	goto	u141
   491  07F6  2FF8               	goto	u140
   492  07F7                     u141:
   493  07F7  2FD8               	goto	l790
   494  07F8                     u140:
   495  07F8  2F67               	goto	l754
   496  07F9  120A  118A  2800   	ljmp	start
   497  07FC                     __end_of_main:
   498                           
   499                           	psect	text1
   500  0743                     __ptext1:	
   501 ;; *************** function _EEPROM_Write *****************
   502 ;; Defined at:
   503 ;;		line 63 in file "EEPROM.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  Address         1    wreg     unsigned char 
   506 ;;  Data            1    0[COMMON] unsigned char 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  Address         1    1[COMMON] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         1       0       0       0       0
   519 ;;      Locals:         1       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         2       0       0       0       0
   522 ;;Total ram usage:        2 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _EEPROM_Write
   533  0743                     _EEPROM_Write:
   534                           
   535                           ;incstack = 0
   536                           ; Regs used in _EEPROM_Write: [wreg]
   537                           ;EEPROM_Write@Address stored from wreg
   538  0743  00F1               	movwf	EEPROM_Write@Address
   539  0744                     l728:
   540  0744                     l48:	
   541                           ;EEPROM.c: 63: void EEPROM_Write(uint8_t Address, uint8_t Data);EEPROM.c: 64: {;EEPROM.c
      +                          : 65:   while(EECON1bits.WR);
   542                           
   543  0744  1683               	bsf	3,5	;RP0=1, select bank3
   544  0745  1703               	bsf	3,6	;RP1=1, select bank3
   545  0746  188C               	btfsc	12,1	;volsfr
   546  0747  2F49               	goto	u81
   547  0748  2F4A               	goto	u80
   548  0749                     u81:
   549  0749  2F44               	goto	l48
   550  074A                     u80:
   551  074A                     l730:
   552                           
   553                           ;EEPROM.c: 66:   EEADR = Address;
   554  074A  0871               	movf	EEPROM_Write@Address,w
   555  074B  1283               	bcf	3,5	;RP0=0, select bank2
   556  074C  1703               	bsf	3,6	;RP1=1, select bank2
   557  074D  008D               	movwf	13	;volatile
   558                           
   559                           ;EEPROM.c: 67:   EEDATA = Data;
   560  074E  0870               	movf	EEPROM_Write@Data,w
   561  074F  008C               	movwf	12	;volatile
   562  0750                     l732:
   563                           
   564                           ;EEPROM.c: 68:   EECON1bits.EEPGD = 0;
   565  0750  1683               	bsf	3,5	;RP0=1, select bank3
   566  0751  1703               	bsf	3,6	;RP1=1, select bank3
   567  0752  138C               	bcf	12,7	;volsfr
   568  0753                     l734:
   569                           
   570                           ;EEPROM.c: 69:   EECON1bits.WREN = 1;
   571  0753  150C               	bsf	12,2	;volsfr
   572  0754                     l736:
   573                           
   574                           ;EEPROM.c: 70:   INTCONbits.GIE = 0;
   575  0754  138B               	bcf	11,7	;volatile
   576                           
   577                           ;EEPROM.c: 71:   EECON2 = 0x55;
   578  0755  3055               	movlw	85
   579  0756  008D               	movwf	13	;volsfr
   580                           
   581                           ;EEPROM.c: 72:   EECON2 = 0xAA;
   582  0757  30AA               	movlw	170
   583  0758  008D               	movwf	13	;volsfr
   584  0759                     l738:
   585                           
   586                           ;EEPROM.c: 73:   EECON1bits.WR = 1;
   587  0759  148C               	bsf	12,1	;volsfr
   588  075A                     l740:
   589                           
   590                           ;EEPROM.c: 74:   INTCONbits.GIE = 1;
   591  075A  178B               	bsf	11,7	;volatile
   592  075B                     l742:
   593                           
   594                           ;EEPROM.c: 75:   EECON1bits.WREN = 0;
   595  075B  110C               	bcf	12,2	;volsfr
   596  075C                     l744:
   597                           
   598                           ;EEPROM.c: 76:   EECON1bits.WR = 0;
   599  075C  108C               	bcf	12,1	;volsfr
   600  075D                     l51:
   601  075D  0008               	return
   602  075E                     __end_of_EEPROM_Write:
   603                           
   604                           	psect	text2
   605  0732                     __ptext2:	
   606 ;; *************** function _EEPROM_Read *****************
   607 ;; Defined at:
   608 ;;		line 78 in file "EEPROM.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  Address         1    wreg     unsigned char 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  Address         1    0[COMMON] unsigned char 
   613 ;;  Data            1    1[COMMON] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      unsigned char 
   616 ;; Registers used:
   617 ;;		wreg, btemp+1
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         2       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         2       0       0       0       0
   627 ;;Total ram usage:        2 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _EEPROM_Read
   638  0732                     _EEPROM_Read:
   639                           
   640                           ;incstack = 0
   641                           ; Regs used in _EEPROM_Read: [wreg+btemp+1]
   642                           ;EEPROM_Read@Address stored from wreg
   643  0732  00F0               	movwf	EEPROM_Read@Address
   644  0733                     l664:
   645                           
   646                           ;EEPROM.c: 78: uint8_t EEPROM_Read(uint8_t Address);EEPROM.c: 79: {;EEPROM.c: 80:   uint
      +                          8_t Data;;EEPROM.c: 81:   EEADR = Address;
   647  0733  0870               	movf	EEPROM_Read@Address,w
   648  0734  1283               	bcf	3,5	;RP0=0, select bank2
   649  0735  1703               	bsf	3,6	;RP1=1, select bank2
   650  0736  008D               	movwf	13	;volatile
   651  0737                     l666:
   652                           
   653                           ;EEPROM.c: 82:   EECON1bits.EEPGD = 0;
   654  0737  1683               	bsf	3,5	;RP0=1, select bank3
   655  0738  1703               	bsf	3,6	;RP1=1, select bank3
   656  0739  138C               	bcf	12,7	;volsfr
   657  073A                     l668:
   658                           
   659                           ;EEPROM.c: 83:   EECON1bits.RD = 1;
   660  073A  140C               	bsf	12,0	;volsfr
   661  073B                     l670:
   662                           
   663                           ;EEPROM.c: 84:   Data = EEDATA;
   664  073B  1283               	bcf	3,5	;RP0=0, select bank2
   665  073C  1703               	bsf	3,6	;RP1=1, select bank2
   666  073D  080C               	movf	12,w	;volatile
   667  073E  00FF               	movwf	btemp+1
   668  073F  087F               	movf	btemp+1,w
   669  0740  00F1               	movwf	EEPROM_Read@Data
   670  0741                     l672:
   671                           
   672                           ;EEPROM.c: 85:   return Data;
   673  0741  0871               	movf	EEPROM_Read@Data,w
   674  0742                     l54:
   675  0742  0008               	return
   676  0743                     __end_of_EEPROM_Read:
   677  007E                     btemp	set	126	;btemp
   678  007E                     wtemp0	set	126
   679                           
   680                           	psect	config
   681                           
   682                           ;Config register CONFIG @ 0x2007
   683                           ;	Oscillator Selection bits
   684                           ;	FOSC = XT, XT oscillator
   685                           ;	Watchdog Timer Enable bit
   686                           ;	WDTE = OFF, WDT disabled
   687                           ;	Power-up Timer Enable bit
   688                           ;	PWRTE = ON, PWRT enabled
   689                           ;	Brown-out Reset Enable bit
   690                           ;	BOREN = ON, BOR enabled
   691                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   692                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   693                           ;	Data EEPROM Memory Code Protection bit
   694                           ;	CPD = OFF, Data EEPROM code protection off
   695                           ;	Flash Program Memory Write Enable bits
   696                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   697                           ;	In-Circuit Debugger Mode bit
   698                           ;	DEBUG = 0x1, unprogrammed default
   699                           ;	Flash Program Memory Code Protection bit
   700                           ;	CP = OFF, Code protection off
   701  2007                     	org	8199
   702  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EEPROM_Read
    _main->_EEPROM_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     463
                                              2 COMMON     5     5      0
                        _EEPROM_Read
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 21 17:37:38 2020

                     l51 075D                       l54 0742                       l48 0744  
                     u80 074A                       u81 0749                       u90 076D  
                     u91 076C                      l730 074A                      l740 075A  
                    l732 0750                      l670 073B                      l742 075B  
                    l734 0753                      l750 0763                      l672 0741  
                    l664 0733                      l744 075C                      l736 0754  
                    l728 0744                      l760 077B                      l752 0766  
                    l666 0737                      l738 0759                      l770 07A9  
                    l762 0788                      l754 0767                      l746 075E  
                    l668 073A                      l780 07D0                      l772 07AF  
                    l764 078E                      l756 076D                      l748 0762  
                    l790 07D8                      l782 07D1                      l774 07B9  
                    l766 0798                      l758 0777                      l792 07E1  
                    l784 07D7                      l776 07BD                      l768 079C  
                    l794 07EE                      l778 07CA                      l796 07F2  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      u100 078E                      u101 078D  
                    u110 07AF                      u111 07AE                      u120 07D0  
                    u121 07CF                      u130 07D7                      u131 07D6  
                    u140 07F8                      u141 07F7                      u157 0781  
                    u167 07A2                      u177 07C3                      u187 07E7  
                   _main 075E                     btemp 007E                     start 0000  
   __end_of_EEPROM_Write 075E                    ?_main 0070                    _EEADR 010D  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  main@i 0075                    status 0003                    wtemp0 007E  
       EEPROM_Write@Data 0070     __size_of_EEPROM_Read 0011          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0072                   _EEDATA 010C  
                 _EECON2 018D  __end_of__initialization 07FC    __size_of_EEPROM_Write 001B  
         __pcstackCOMMON 0070             _EEPROM_Write 0743               __pmaintext 075E  
                __ptext1 0743                  __ptext2 0732     end_of_initialization 07FC  
          ??_EEPROM_Read 0070      __end_of_EEPROM_Read 0743      start_initialization 07FC  
              ___latbits 0002              _EEPROM_Read 0732               _EECON1bits 018C  
          ?_EEPROM_Write 0070            __size_of_main 009E               _INTCONbits 000B  
     EEPROM_Read@Address 0070           ??_EEPROM_Write 0071             ?_EEPROM_Read 0070  
    EEPROM_Write@Address 0071          EEPROM_Read@Data 0071              main@Address 0076  
